[[release-notes-5.0.0]]
== 5.0.0 Combined Release Notes

The list below covers all changes from 5.0.0-alpha1 to 5.0.0 GA excluding changes which were already released in the 2.x series, which can be found in <<release-notes-5.0.0-alpha1-2x>>.

Also see <<breaking-changes-5.0>>.

[[breaking-5.0.0]]
[float]
=== Breaking changes

Aggregations::
* Remove size 0 options in aggregations {pull}18854[#18854] (issue: {issue}18838[#18838])

Aliases::
* make get alias expand to open and closed indices by default {pull}15954[#15954] (issue: {issue}14982[#14982])
* Remove deprecated indices.get_aliases {pull}13906[#13906]

Allocation::
* Remove DisableAllocationDecider {pull}13313[#13313]

Analysis::
* Remove `token_filter` in _analyze API {pull}20285[#20285] (issue: {issue}20283[#20283])
* Removes support for adding aliases to analyzers {pull}19994[#19994] (issue: {issue}18244[#18244])
* Analyze API : Rename filters/token_filters/char_filter in Analyze API in master {pull}17843[#17843] (issue: {issue}15189[#15189])

CAT API::
* Improve cat thread pool API {pull}19721[#19721] (issue: {issue}19590[#19590])
* Row-centric output for _cat/fielddata {pull}18068[#18068] (issue: {issue}10249[#10249])
* Add raw recovery progress to cat recovery API {pull}17064[#17064] (issue: {issue}17022[#17022])
* Remove host from cat nodes API {pull}16656[#16656] (issues: {issue}12959[#12959], {issue}16575[#16575])
* Using the accept header in the request instead of content-type in _cat API. {pull}14421[#14421] (issue: {issue}14195[#14195])

CRUD::
* Fixed naming inconsistency for fields/stored_fields in the APIs {pull}20166[#20166] (issues: {issue}18943[#18943], {issue}20155[#20155])
* Disallow creating indices starting with '-' or '+' {pull}20033[#20033] (issue: {issue}19800[#19800])
* Wait for changes to be visible by search {pull}17986[#17986] (issue: {issue}1063[#1063])
* Remove object notation for core types. {pull}15684[#15684] (issue: {issue}15388[#15388])

Cache::
* Remove deprecated query cache settings {pull}15592[#15592]

Cluster::
* Persistent Node Ids {pull}19140[#19140] (issue: {issue}17811[#17811])
* Remove validation errors from cluster health response {pull}17773[#17773] (issue: {issue}16979[#16979])
* Remove memory section {pull}17278[#17278] (issues: {issue}12049[#12049], {issue}16756[#16756])

Core::
* Remove ignore system bootstrap checks {pull}20511[#20511]
* Remove minimum master nodes bootstrap check {pull}20082[#20082]
* Keep input time unit when parsing TimeValues {pull}19102[#19102]
* Remove cluster name from data path {pull}18554[#18554] (issue: {issue}17810[#17810])
* Add max number of processes check {pull}16919[#16919]
* Add mlockall bootstrap check {pull}16909[#16909]
* One log {pull}16703[#16703] (issue: {issue}16585[#16585])

Engine::
* Optimize indexing for the autogenerated ID append-only case {pull}20211[#20211] (issue: {issue}19813[#19813])
* Remove `index.compound_on_flush` setting and default to `true` {pull}15594[#15594] (issue: {issue}10778[#10778])

Exceptions::
* Die with dignity {pull}19272[#19272] (issue: {issue}19231[#19231])

Fielddata::
* Remove "uninverted" and "binary" fielddata support for numeric and boolean fields. {pull}14082[#14082] (issue: {issue}14113[#14113])

Geo::
* Deprecate GeoDistance enums and remove geo distance script helpers {pull}19783[#19783]

Index APIs::
* Removes write consistency level across replication action APIs in favor of wait_for_active_shards {pull}19454[#19454] (issue: {issue}18985[#18985])
* Remove `GET` option for /_forcemerge {pull}15223[#15223] (issue: {issue}15165[#15165])
* Remove /_optimize REST API endpoint {pull}14226[#14226] (issue: {issue}13778[#13778])

Indexed Scripts/Templates::
* Store indexed scripts in the cluster state instead of the `.scripts` index {pull}17650[#17650] (issue: {issue}16651[#16651])

Inner Hits::
* Also do not serialize `_index` key in search response for parent/child inner hits {pull}19011[#19011]
* Don't include `_id`, `_type` and `_index` keys in search response for inner hits {pull}18995[#18995] (issue: {issue}18091[#18091])
* Nested inner hits shouldn't use relative paths {pull}18567[#18567] (issue: {issue}16653[#16653])
* Drop top level inner hits in favour of inner hits defined in the query dsl {pull}17816[#17816] (issue: {issue}11118[#11118])

Internal::
* `_flush` should block by default {pull}20597[#20597] (issue: {issue}20569[#20569])
* Actually bound the generic thread pool {pull}17017[#17017]
* Remove support for pre 2.0 indices {pull}13799[#13799]

Logging::
* Introduce Log4j 2 {pull}20235[#20235] (issues: {issue}16030[#16030], {issue}17697[#17697])

Mapping::
* Remove `_timestamp` and `_ttl` on 5.x indices. {pull}18980[#18980] (issue: {issue}18280[#18280])
* Add a soft limit on the mapping depth. {pull}17400[#17400]
* Disable fielddata on text fields by defaults. {pull}17386[#17386]
* Add limit to total number of fields in mapping {pull}17357[#17357]
* Change the field mapping index time boost into a query time boost. {pull}16900[#16900]
* Deprecate string in favor of text/keyword. {pull}16877[#16877]
* Term vector APIs should no longer update mappings {pull}16285[#16285]
* Remove the `format` option of the `_source` field. {pull}15398[#15398]
* Remove transform {pull}13657[#13657] (issue: {issue}12674[#12674])

Packaging::
* Rename service.bat to elasticsearch-service.bat {pull}20496[#20496] (issue: {issue}17528[#17528])
* Remove -D handling in args for windows plugin script {pull}20378[#20378] (issue: {issue}18207[#18207])
* Set default min heap equal to default max heap {pull}20080[#20080] (issues: {issue}16334[#16334], {issue}17728[#17728], {issue}18311[#18311])
* Remove allow running as root {pull}18694[#18694] (issue: {issue}18688[#18688])
* Require /bin/bash in packaging {pull}18259[#18259] (issue: {issue}18251[#18251])
* Remove plugin script parsing of system properties {pull}18207[#18207] (issue: {issue}18140[#18140])
* Add JVM options configuration file {pull}17675[#17675] (issue: {issue}17121[#17121])

Parent/Child::
* Removed `total` score mode in favour for `sum` score mode. {pull}17174[#17174] (issues: {issue}13470[#13470], {issue}17083[#17083])
* Removed pre 2.x parent child implementation {pull}13376[#13376]

Percolator::
* Remove `.percolator` type in favour of `percolator` field type {pull}17560[#17560]
* Change the percolate api to not dynamically add fields to mapping {pull}16077[#16077] (issue: {issue}15751[#15751])

Plugin Delete By Query::
* Remove Delete-By-Query plugin {pull}18516[#18516] (issue: {issue}18469[#18469])

Plugin Lang Painless::
* Remove all date 'now' methods from Painless {pull}20766[#20766] (issue: {issue}20762[#20762])
* Make Painless the Default Language {pull}20017[#20017] (issue: {issue}19960[#19960])

Plugins::
* Plugins cleanup {pull}18594[#18594] (issue: {issue}18588[#18588])
* Rename bin/plugin in bin/elasticsearch-plugin {pull}16454[#16454]
* Change the inner structure of the plugins zip {pull}16453[#16453]
* Remove multicast plugin {pull}16326[#16326] (issue: {issue}16310[#16310])
* Plugins: Remove site plugins {pull}16038[#16038]

Query DSL::
* Lessen leniency of the query dsl. {pull}18276[#18276]
* Function score query: remove deprecated support for boost_factor {pull}13510[#13510]
* Remove support for deprecated queries. {pull}13418[#13418] (issue: {issue}13326[#13326])

REST::
* Change separator for shards preference {pull}20786[#20786] (issues: {issue}20722[#20722], {issue}20769[#20769])
* Parameter improvements to Cluster Health API wait for shards {pull}20223[#20223] (issue: {issue}20216[#20216])
* Switch indices.exists_type from `{index}/{type}` to `{index}/_mapping/{type}`. {pull}20055[#20055] (issue: {issue}15613[#15613])
* Only use `PUT` for index creation, not POST. {pull}20001[#20001] (issues: {issue}15613[#15613], {issue}18160[#18160])
* Remove camelCase support {pull}17933[#17933] (issue: {issue}8988[#8988])
* Remove 'case' parameter from rest apis {pull}17774[#17774] (issue: {issue}8988[#8988])
* Disallow unquoted field names {pull}15351[#15351] (issue: {issue}9800[#9800])
* Limit the accepted length of the _id {pull}16036[#16036] (issue: {issue}16034[#16034])

Scripting::
* Hardcode painless as the default scripting lang and add legacy script default for stored scripts {pull}20310[#20310] (issue: {issue}20122[#20122])
* Remove deprecated 1.x script and template syntax {pull}19387[#19387] (issue: {issue}13729[#13729])
* Allow only a single extension for a scripting engine {pull}18332[#18332] (issue: {issue}10598[#10598])
* Remove 'sandbox' option for script settings, allow only registering a single language. {pull}18226[#18226] (issues: {issue}10598[#10598], {issue}17114[#17114])

Search::
* Rename `fields` to `stored_fields` and add `docvalue_fields` {pull}18992[#18992] (issue: {issue}18943[#18943])
* Remove only node preference {pull}18875[#18875] (issue: {issue}18822[#18822])
* Add search preference to prefer multiple nodes {pull}18872[#18872] (issue: {issue}18822[#18822])
* Add a soft limit on the number of shards that can be queried in a single search request. {pull}17396[#17396]
* Remove deprecated reverse option from sorting {pull}17282[#17282] (issue: {issue}17047[#17047])
* Remove some deprecations {pull}14331[#14331]
* Remove search exists api {pull}13911[#13911] (issues: {issue}13682[#13682], {issue}13910[#13910])
* Remove the scan and count search types. {pull}13310[#13310]

Search Refactoring::
* Remove deprecated parameter from field sort builder. {pull}16573[#16573] (issue: {issue}16127[#16127])
* Remove "query" query and fix related parsing bugs {pull}14304[#14304] (issue: {issue}13326[#13326])

Settings::
* Default max local storage nodes to one {pull}19964[#19964] (issues: {issue}19679[#19679], {issue}19748[#19748])
* Persistent Node Names {pull}19456[#19456] (issue: {issue}19140[#19140])
* Remove support for properties {pull}19398[#19398] (issues: {issue}19388[#19388], {issue}19391[#19391])
* Rename boostrap.mlockall to bootstrap.memory_lock {pull}18669[#18669]
* Register `indices.query.bool.max_clause_count` setting {pull}18341[#18341] (issue: {issue}18336[#18336])
* Remove settings and system properties entanglement {pull}18198[#18198] (issue: {issue}18197[#18197])
* Remove `action.get.realtime` setting {pull}17857[#17857] (issue: {issue}12543[#12543])
* Remove ability to specify arbitrary node attributes with `node.` prefix {pull}17402[#17402] (issue: {issue}17280[#17280])
* Enforce `discovery.zen.minimum_master_nodes` is set when bound to a public ip {pull}17288[#17288]
* Prevent index level setting from being configured on a node level {pull}17144[#17144] (issue: {issue}16799[#16799])
* Remove support for node.client setting {pull}16963[#16963] (issue: {issue}16565[#16565])
* Remove es.max-open-files flag {pull}16757[#16757] (issues: {issue}16506[#16506], {issue}483[#483])
* Enforce node level limits if node is started in production env {pull}16733[#16733] (issue: {issue}16727[#16727])
* Make settings validation strict {pull}16365[#16365]
* Remove the ability to fsync on every operation and only schedule fsync task if really needed {pull}16257[#16257] (issue: {issue}16152[#16152])
* Script settings {pull}16197[#16197]
* Remove index.flush_on_close entirely {pull}15977[#15977]
* Restore chunksize of 512kb on recovery and remove configurability {pull}15235[#15235] (issue: {issue}15161[#15161])
* Remove ancient deprecated and alternative recovery settings {pull}15234[#15234]

Similarities::
* Renames `default` similarity into `classic` {pull}15446[#15446] (issue: {issue}15102[#15102])

Snapshot/Restore::
* Change the default of `include_global_state` from true to false for snapshot restores {pull}18773[#18773] (issue: {issue}18569[#18569])
* Fail closing or deleting indices during a full snapshot {pull}17021[#17021] (issue: {issue}16321[#16321])

Stats::
* Modify load average format {pull}15932[#15932] (issue: {issue}15907[#15907])
* Reintroduce five-minute and fifteen-minute load averages on Linux {pull}15907[#15907] (issues: {issue}12049[#12049], {issue}14741[#14741])
* Add system CPU percent to OS stats {pull}14741[#14741]

Term Vectors::
* Remove DFS support from TermVector API {pull}16452[#16452]

Translog::
* Drop support for simple translog and hard-wire buffer to 8kb {pull}15574[#15574]
* Simplify translog-based flush settings {pull}15573[#15573]

Warmers::
* Remove query warmers and the warmer API. {pull}15614[#15614] (issue: {issue}15607[#15607])



[[breaking-java-5.0.0]]
[float]
=== Breaking Java changes

Aggregations::
* getKeyAsString and key_as_string should be the same for terms aggregation on boolean field {pull}15393[#15393]

Allocation::
* Move parsing of allocation commands into REST and remove support for plugins to register allocation commands {pull}17802[#17802] (issue: {issue}17894[#17894])
* Simplify shard balancer interface {pull}17028[#17028] (issue: {issue}8954[#8954])

Analysis::
* Simplify Analysis registration and configuration {pull}14355[#14355]

CRUD::
* Removing isCreated and isFound from the Java API {pull}19645[#19645] (issues: {issue}19566[#19566], {issue}19631[#19631])

Cache::
* Refactor IndicesRequestCache to make it testable. {pull}16610[#16610]
* Fold IndexCacheModule into IndexModule {pull}14293[#14293]

Core::
* Remove ability to plug-in TransportService {pull}20505[#20505]
* Register thread pool settings {pull}18674[#18674] (issues: {issue}18613[#18613], {issue}9216[#9216])
* Bootstrap does not set system properties {pull}17088[#17088] (issues: {issue}16579[#16579], {issue}16791[#16791])
* Remove es.useLinkedTransferQueue {pull}16786[#16786]

Discovery::
* Introduce node handshake {pull}15971[#15971] (issue: {issue}9061[#9061])
* Include pings from client nodes in master election {pull}17329[#17329] (issue: {issue}17325[#17325])

Highlighting::
* Register Highlighter instances instead of classes {pull}18859[#18859]

Internal::
* Remove TransportService#registerRequestHandler leniency {pull}20469[#20469] (issue: {issue}20468[#20468])
* Consolidate search parser registries {pull}20000[#20000]
* Move all FetchSubPhases to o.e.search.fetch.subphase {pull}19702[#19702]
* Squash the rest of o.e.rest.action {pull}19698[#19698]
* Clean up BytesReference {pull}19196[#19196]
* Cleanup ClusterService dependencies and detached from Guice {pull}18941[#18941]
* Simplify SubFetchPhase interface {pull}18881[#18881]
* Simplify FetchSubPhase registration and detach it from Guice {pull}18862[#18862]
* Remove duplicate getters from DiscoveryNode and DiscoveryNodes {pull}17410[#17410] (issue: {issue}16963[#16963])
* Cli: Switch to jopt-simple {pull}17024[#17024] (issue: {issue}11564[#11564])
* Replace ContextAndHeaders with a ThreadPool based ThreadLocal implementation {pull}15776[#15776]
* Remove NodeBuilder {pull}15354[#15354]
* Fix IndexSearcherWrapper interface to not depend on the EngineConfig {pull}14654[#14654]
* Cleanup query parsing and remove IndexQueryParserService {pull}14452[#14452]
* Remove circular dependency between IndicesService and IndicesStore {pull}14285[#14285]
* Remove guice injection from IndexStore and friends {pull}14279[#14279]
* Replace IndicesLifecycle with a per-index IndexEventListener {pull}14217[#14217] (issue: {issue}13259[#13259])
* Simplify similarity module and friends {pull}13942[#13942]
* Refactor SearchRequest to be parsed on the coordinating node {pull}13859[#13859]

Java API::
* Add a dedicated client/transport project for transport-client {pull}19435[#19435] (issue: {issue}19412[#19412])
* Remove setRefresh {pull}18752[#18752] (issue: {issue}1063[#1063])
* Remove the count api {pull}14166[#14166] (issue: {issue}13928[#13928])
* IdsQueryBuilder to accept only non null ids and types {pull}13937[#13937]

Mapping::
* [Mapping] Several MappingService cleanups {pull}16133[#16133] (issue: {issue}15924[#15924])

Network::
* Factor out abstract TCPTransport* classes to reduce the netty footprint {pull}19096[#19096]
* Remove ability to disable Netty gathering writes {pull}16774[#16774] (issue: {issue}7811[#7811])

Parent/Child::
* Cleanup ParentFieldMapper {pull}16045[#16045]
* Several other parent/child cleanups {pull}13470[#13470]

Percolator::
* Move the percolator from core to its own module {pull}18511[#18511]
* Remove percolator cache {pull}18434[#18434]

Plugins::
* Cleanup sub fetch phase extension point {pull}20382[#20382]
* Remove IndexTemplateFilter {pull}20072[#20072]
* Switch custom ShardsAllocators to pull based model {pull}20071[#20071]
* Make custom allocation deciders use pull based extensions {pull}20040[#20040]
* Migrate query registration from push to pull {pull}19376[#19376]
* Add components getter as bridge between guice and new plugin init world {pull}19371[#19371]
* Remove CustomNodeAttributes extension point {pull}19348[#19348]
* Add RepositoryPlugin interface for registering snapshot repositories {pull}19324[#19324]
* Simplified repository api for snapshot/restore {pull}19292[#19292]
* Switch most search extensions from push to pull {pull}19238[#19238]
* Move RestHandler registration to ActionModule and ActionPlugin {pull}19165[#19165]
* Pull actions from plugins {pull}19108[#19108]
* Switch analysis from push to pull {pull}19073[#19073]
* Remove guice from Mapper plugins {pull}19018[#19018]
* Fail to start if plugin tries broken onModule {pull}19025[#19025]
* Simplify ScriptModule and script registration {pull}18903[#18903]
* Cut over settings registration to a pull model {pull}18890[#18890]
* Enforce isolated mode for all plugins {pull}17276[#17276]
* Don't use guice for QueryParsers {pull}15761[#15761]
* Remove guice from the index level {pull}14518[#14518]
* Remove shard-level injector {pull}13881[#13881]

Query DSL::
* Remove the MissingQueryBuilder which was deprecated in 2.2.0. {pull}15364[#15364] (issue: {issue}14112[#14112])
* Remove NotQueryBuilder {pull}14204[#14204] (issue: {issue}13761[#13761])

Scripting::
* Remove o.e.script.Template class and move template query to lang-mustache module {pull}19425[#19425] (issue: {issue}16314[#16314])
* Move search template to lang-mustache module {pull}18765[#18765] (issue: {issue}17906[#17906])
* Remove LeafSearchScript.runAsFloat(): Nothing calls it. {pull}18364[#18364]

Search::
* Remove FetchSubPhaseParseElement {pull}20350[#20350]
* Refactor of query profile classes to make way for other profile implementations {pull}18370[#18370] (issue: {issue}10538[#10538])
* Query refactoring: split parse phase into fromXContent and toQuery for all queries {pull}13788[#13788] (issue: {issue}10217[#10217])

Search Refactoring::
* Refactored inner hits parsing and intoduced InnerHitBuilder {pull}17291[#17291]
* Remove support for query_binary and filter_binary {pull}14433[#14433] (issue: {issue}14308[#14308])
* Validate query api: move query parsing to the coordinating node {pull}14384[#14384]

Settings::
* Remove `node.mode` and `node.local` settings {pull}19428[#19428]
* Remove Settings.settingsBuilder. {pull}17619[#17619]
* Move remaining settings in NettyHttpServerTransport to the new infra {pull}16531[#16531]
* Replace IndexSettings annotation with a full-fledged class {pull}14251[#14251]
* Fix ping timeout settings inconsistencies {pull}13701[#13701] (issue: {issue}6579[#6579])

Snapshot/Restore::
* Removes extra writeBlob method in BlobContainer {pull}19727[#19727] (issue: {issue}18528[#18528])

Store::
* Standardize state format type for global and index level metadata {pull}17123[#17123]

Suggesters::
* Remove suggest threadpool {pull}17304[#17304] (issue: {issue}17198[#17198])
* Remove suggest transport action {pull}17198[#17198] (issue: {issue}10217[#10217])



[[deprecation-5.0.0]]
[float]
=== Deprecations

CRUD::
* Deprecate found and created in delete and index rest responses {pull}19633[#19633]

Plugin Discovery Azure Classic::
* Deprecate discovery-azure and rename it to discovery-azure-classic {pull}19186[#19186] (issue: {issue}19144[#19144])

Plugin Mapper Attachment::
* Deprecate mapper-attachments plugin {pull}16948[#16948] (issue: {issue}16910[#16910])

Query DSL::
* Deprecate Indices query {pull}17710[#17710] (issue: {issue}12017[#12017])
* Deprecate mlt, in and geo_bbox query name shortcuts {pull}17507[#17507]

Query Refactoring::
* Splits `phrase` and `phrase_prefix` in match query into `MatchPhraseQueryBuilder` and `MatchPhrasePrefixQueryBuilder` {pull}17508[#17508]

Scripting::
* Deprecate Groovy, Python, and Javascript {pull}20244[#20244] (issue: {issue}20129[#20129])

Search::
* Deprecate fuzzy query {pull}16211[#16211] (issues: {issue}15760[#15760], {issue}16121[#16121])

Templates::
* Deprecate template query {pull}19607[#19607] (issue: {issue}19390[#19390])



[[feature-5.0.0]]
[float]
=== New features

Aggregations::
* Split regular histograms from date histograms. {pull}19551[#19551] (issues: {issue}4847[#4847], {issue}8082[#8082])
* Adds aggregation profiling to the profile API {pull}18414[#18414] (issue: {issue}10538[#10538])
* New Matrix Stats Aggregation module {pull}18300[#18300] (issue: {issue}16826[#16826])

Aliases::
* Add an alias action to delete an index {pull}20184[#20184] (issue: {issue}20064[#20064])

Allocation::
* Add API to explain why a shard is or isn't assigned {pull}17305[#17305] (issue: {issue}14593[#14593])

Analysis::
* Exposing lucene 6.x minhash filter. {pull}20206[#20206] (issue: {issue}20149[#20149])
* Add `fingerprint` token filter and `fingerprint` analyzer {pull}17873[#17873] (issue: {issue}13325[#13325])

Circuit Breakers::
* Circuit break on aggregation bucket numbers with request breaker {pull}19394[#19394] (issue: {issue}14046[#14046])

Discovery::
* Add two phased commit to Cluster State publishing {pull}13062[#13062]

Geo::
* Cut over geo_point field and queries to new LatLonPoint type {pull}20315[#20315] (issue: {issue}20314[#20314])

Index APIs::
* Add rollover API to switch index aliases given some predicates {pull}18732[#18732] (issue: {issue}18647[#18647])

Ingest::
* ingest-useragent plugin {pull}19074[#19074]
* Add a Sort ingest processor {pull}17999[#17999]
* Add date_index_name processor {pull}17973[#17973] (issue: {issue}17814[#17814])
* Merge feature/ingest branch into master branch {pull}16049[#16049] (issue: {issue}14049[#14049])

Java REST Client::
* Introduce async performRequest method {pull}19400[#19400]
* Low level Rest Client {pull}18735[#18735] (issue: {issue}7743[#7743])

Mapping::
* Add `scaled_float`. {pull}19264[#19264] (issues: {issue}15939[#15939], {issue}1941[#1941])
* Expose half-floats. {pull}18887[#18887]
* Add a text field. {pull}16637[#16637]
* Add a new `keyword` field. {pull}16589[#16589] (issue: {issue}14113[#14113])

Percolator::
* index the query terms from the percolator query {pull}13646[#13646] (issue: {issue}12664[#12664])

Plugin Analysis ICU::
* Adding support for customizing the rule file in ICU tokenizer {pull}13651[#13651] (issue: {issue}13146[#13146])

Plugin Discovery File::
* File-based discovery plugin {pull}20394[#20394] (issue: {issue}20323[#20323])

Plugin Ingest Attachment::
* Ingest: Add attachment processor {pull}16490[#16490] (issue: {issue}16303[#16303])

Plugin Mapper Attachment::
* Migrate mapper attachments plugin to main repository {pull}14605[#14605]

Plugin Repository HDFS::
* HDFS Snapshot/Restore plugin {pull}15192[#15192] (issue: {issue}15191[#15191])

Plugin Repository S3::
* Add support for path_style_access {pull}15114[#15114]

Query DSL::
* Adds a rewrite phase to queries on the shard level {pull}16870[#16870] (issue: {issue}9526[#9526])

Reindex API::
* Reindex from remote {pull}18585[#18585] (issue: {issue}17447[#17447])
* Port Delete By Query to Reindex infrastructure {pull}18329[#18329] (issue: {issue}16883[#16883])
* Merge reindex to master {pull}16861[#16861]

Scripting::
* Exceptions and Infinite Loop Checking {pull}15936[#15936]
* Added a new scripting language (PlanA) {pull}15136[#15136] (issue: {issue}13084[#13084])

Scroll::
* Add the ability to partition a scroll in multiple slices. {pull}18237[#18237] (issue: {issue}13494[#13494])

Search::
* Add the ability to disable the retrieval of the stored fields entirely {pull}20026[#20026]
* Add `search_after` parameter in the SearchAPI {pull}16125[#16125] (issue: {issue}8192[#8192])

Settings::
* Add infrastructure to transactionally apply and reset dynamic settings {pull}15278[#15278]

Snapshot/Restore::
* Add Google Cloud Storage repository plugin {pull}13578[#13578] (issue: {issue}12880[#12880])

Stats::
* Extend field stats to report searchable/aggregatable fields {pull}17980[#17980] (issue: {issue}17750[#17750])
* API for listing index file sizes {pull}16661[#16661] (issue: {issue}16131[#16131])

Store::
* Expose MMapDirectory.preLoad(). {pull}18880[#18880]
* Add primitive to shrink an index into a single shard {pull}18270[#18270]

Suggesters::
* Add support for returning documents with completion suggester {pull}19536[#19536] (issue: {issue}10746[#10746])
* Add document-oriented completion suggester {pull}14410[#14410] (issue: {issue}10746[#10746])

Task Manager::
* Add task cancellation mechanism {pull}16320[#16320]
* Make the Task object available to the action caller {pull}16033[#16033]
* Task Management: Add framework for registering and communicating with tasks {pull}15347[#15347] (issue: {issue}15117[#15117])

Translog::
* Add `elasticsearch-translog` CLI tool with `truncate` command {pull}19342[#19342] (issue: {issue}19123[#19123])



[[enhancement-5.0.0]]
[float]
=== Enhancements

Aggregations::
* Make the heuristic to compute the default shard size less aggressive. {pull}19659[#19659]
* Add _bucket_count option to buckets_path {pull}19571[#19571] (issue: {issue}19553[#19553])
* Remove AggregationStreams {pull}19507[#19507]
* Migrate serial_diff aggregation to NamedWriteable {pull}19483[#19483]
* Migrate most remaining pipeline aggregations to NamedWriteable {pull}19480[#19480]
* Migrate moving_avg pipeline aggregation to NamedWriteable {pull}19420[#19420]
* Migrate matrix_stats to NamedWriteable {pull}19418[#19418]
* Migrate derivative pipeline aggregation to NamedWriteable {pull}19407[#19407]
* Migrate top_hits, histogram, and ip_range aggregations to NamedWriteable {pull}19375[#19375]
* Migrate nested, reverse_nested, and children aggregations to NamedWriteable {pull}19374[#19374]
* Migrate geohash_grid and geo_bounds aggregations to NamedWriteable {pull}19372[#19372]
* Clean up significant terms aggregation results {pull}19365[#19365]
* Migrate range, date_range, and geo_distance aggregations to NamedWriteable {pull}19321[#19321]
* Migrate terms aggregation to NamedWriteable {pull}19277[#19277]
* Migrate sampler and missing aggregations to NamedWriteable {pull}19259[#19259]
* Migrate global, filter, and filters aggregation to NamedWriteable {pull}19220[#19220]
* Migrate the cardinality, scripted_metric, and geo_centroid aggregations to NamedWriteable {pull}19219[#19219]
* Use a static default precision for the cardinality aggregation. {pull}19215[#19215]
* Migrate more aggregations to NamedWriteable {pull}19199[#19199]
* Migrate stats and extended stats to NamedWriteable {pull}19198[#19198]
* Migrate sum, min, and max aggregations over to NamedWriteable {pull}19194[#19194]
* Start migration away from aggregation streams {pull}19097[#19097]
* Automatically set the collection mode to breadth_first in the terms aggregation when the cardinality of the field is unknown or smaller than the requested size. {pull}18779[#18779] (issue: {issue}9825[#9825])
* Rename PipelineAggregatorBuilder to PipelineAggregationBuilder. {pull}18677[#18677] (issue: {issue}18377[#18377])
* AggregatorBuilder and PipelineAggregatorBuilder do not need generics. {pull}18368[#18368] (issue: {issue}18133[#18133])
* Rename AggregatorBuilder to AggregationBuilder {pull}18377[#18377] (issue: {issue}18367[#18367])
* Add the ability to use the breadth_first mode with nested aggregations (such as `top_hits`) which require access to score information. {pull}18127[#18127] (issue: {issue}9825[#9825])
* Make significant terms work on fields that are indexed with points. {pull}18031[#18031]
* Add tests and documentation for using `time_zone` in date range aggregation {pull}16955[#16955] (issue: {issue}10130[#10130])
* Fixes serialisation of Ranges {pull}16674[#16674]

Allocation::
* Verify AllocationIDs in replication actions {pull}20320[#20320]
* Mark shard as stale on non-replicated write, not on node shutdown {pull}20023[#20023] (issue: {issue}18919[#18919])
* Add routing changes API to RoutingAllocation {pull}19992[#19992]
* Primary shard allocator observes limits in forcing allocation {pull}19811[#19811] (issue: {issue}19446[#19446])
* Use primary terms as authority to fail shards {pull}19715[#19715]
* Add recovery source to ShardRouting {pull}19516[#19516]
* Allow `_shrink` to N shards if source shards is a multiple of N {pull}18699[#18699]
* Only filter intial recovery (post API) when shrinking an index {pull}18661[#18661]
* Estimate shard size for shrinked indices {pull}18659[#18659]
* Only fail relocation target shard if failing source shard is a primary {pull}18574[#18574] (issue: {issue}16144[#16144])
* Simplify delayed shard allocation {pull}18351[#18351] (issue: {issue}18293[#18293])
* Limit retries of failed allocations per index {pull}18467[#18467] (issue: {issue}18417[#18417])
* Immutable ShardRouting {pull}17821[#17821]
* Add the shard's store status to the explain API {pull}17689[#17689] (issue: {issue}17372[#17372])
* Write shard state metadata as soon as shard is created / initializing {pull}16625[#16625] (issue: {issue}14739[#14739])
* Reuse existing allocation id for primary shard allocation {pull}16530[#16530] (issue: {issue}14739[#14739])
* Remove version in ShardRouting (now obsolete) {pull}16243[#16243] (issue: {issue}14739[#14739])
* Prefer nodes that previously held primary shard for primary shard allocation {pull}16096[#16096] (issue: {issue}14739[#14739])
* Extend reroute with an option to force assign stale primary shard copies {pull}15708[#15708] (issue: {issue}14739[#14739])
* Allocate primary shards based on allocation IDs {pull}15281[#15281] (issue: {issue}14739[#14739])
* Persist currently started allocation IDs to index metadata {pull}14964[#14964] (issue: {issue}14739[#14739])
* Use ObjectParser to parse AllocationID {pull}14962[#14962] (issue: {issue}14831[#14831])
* Persist allocation ID with shard state metadata on nodes {pull}14831[#14831] (issue: {issue}14739[#14739])

Analysis::
* Stop using cached component in _analyze API {pull}19929[#19929] (issue: {issue}19827[#19827])
* Specify custom char_filters/tokenizer/token_filters in the analyze API {pull}15671[#15671] (issue: {issue}8878[#8878])
* Add a MultiTermAwareComponent marker interface to analysis factories. {pull}19028[#19028] (issues: {issue}18064[#18064], {issue}9978[#9978])
* Add Flags Parameter for Char Filter {pull}18363[#18363] (issue: {issue}18362[#18362])
* Core: better error message when analyzer created without tokenizer or… {pull}18455[#18455] (issue: {issue}15492[#15492])
* Move AsciiFolding earlier in FingerprintAnalyzer filter chain {pull}18281[#18281] (issue: {issue}18266[#18266])
* Improve error message if resource files have illegal encoding {pull}17237[#17237] (issue: {issue}17212[#17212])

Benchmark::
* Add client-benchmark-noop-api-plugin to stress clients even more in benchmarks {pull}20103[#20103]

CAT API::
* Add health status parameter to cat indices API {pull}20393[#20393]
* Includes the index UUID in the _cat/indices API {pull}19204[#19204] (issue: {issue}19132[#19132])
* Add node name to Cat Recovery {pull}18187[#18187] (issue: {issue}8041[#8041])
* Add support for documented byte/size units and for micros as a time unit in _cat API {pull}17779[#17779]
* Add _cat/tasks {pull}17551[#17551]
* Cat health supports ts=0 option {pull}13508[#13508] (issue: {issue}10109[#10109])
* Expose http address in cat/nodes {pull}16770[#16770]
* [cat/recovery] Make recovery time a TimeValue() {pull}16743[#16743] (issue: {issue}9209[#9209])
* :CAT API: remove space at the end of a line {pull}15250[#15250] (issue: {issue}9464[#9464])

CRUD::
* Renaming operation to result and reworking responses  {pull}19704[#19704] (issue: {issue}19664[#19664])
* Adding _operation field to index, update, delete response. {pull}19566[#19566] (issues: {issue}19267[#19267], {issue}9642[#9642], {issue}9736[#9736])
* CRUD: Allow to get and set ttl as a time value/string {pull}15047[#15047]

Cache::
* Enable option to use request cache for size > 0 {pull}19472[#19472]
* Cache FieldStats in the request cache {pull}18768[#18768] (issue: {issue}18717[#18717])
* Allow the query cache to be disabled. {pull}16268[#16268] (issue: {issue}15802[#15802])
* Enable the indices request cache by default {pull}17162[#17162] (issues: {issue}16870[#16870], {issue}17134[#17134])

Circuit Breakers::
* Cluster Settings Updates should not trigger circuit breakers. {pull}20827[#20827]
* Circuit break the number of inline scripts compiled per minute {pull}19694[#19694] (issue: {issue}19396[#19396])

Cluster::
* Add clusterUUID to RestMainAction output {pull}20503[#20503]
* Batch process node left and node failure {pull}19289[#19289] (issue: {issue}19282[#19282])
* Index creation waits for write consistency shards {pull}18985[#18985]
* Inline reroute with process of node join/master election {pull}18938[#18938] (issue: {issue}17270[#17270])
* Index creation does not cause the cluster health to go RED {pull}18737[#18737] (issues: {issue}9106[#9106], {issue}9126[#9126])
* Cluster Health class improvements {pull}18673[#18673]
* Adds tombstones to cluster state for index deletions {pull}17265[#17265] (issues: {issue}16358[#16358], {issue}17435[#17435])
* Enable acked indexing {pull}17038[#17038] (issue: {issue}7572[#7572])
* Cluster Health should run on applied states, even if waitFor=0 {pull}17440[#17440]
* Resolve index names to Index instances early {pull}17048[#17048]
* Remove DiscoveryNode#shouldConnectTo method {pull}16898[#16898] (issue: {issue}16815[#16815])
* Fail demoted primary shards and retry request {pull}16415[#16415] (issue: {issue}14252[#14252])
* Illegal shard failure requests {pull}16275[#16275]
* Shard failure requests for non-existent shards {pull}16089[#16089] (issue: {issue}14252[#14252])
* Add handling of channel failures when starting a shard {pull}16041[#16041] (issue: {issue}15895[#15895])
* Wait for new master when failing shard {pull}15748[#15748] (issue: {issue}14252[#14252])
* Master should wait on cluster state publication when failing a shard {pull}15468[#15468] (issue: {issue}14252[#14252])
* Split cluster state update tasks into roles {pull}14899[#14899] (issue: {issue}13627[#13627])
* Add timeout mechanism for sending shard failures {pull}14707[#14707] (issue: {issue}14252[#14252])
* Add listener mechanism for failures to send shard failed {pull}14295[#14295] (issue: {issue}14252[#14252])

Core::
* Add production warning for pre-release builds {pull}20674[#20674]
* Add serial collector bootstrap check {pull}20558[#20558]
* Rename Netty TCP transports thread factories from http_* to transport_* {pull}20207[#20207]
* Do not log full bootstrap checks exception {pull}19989[#19989]
* Mark halting the virtual machine as privileged {pull}19923[#19923] (issues: {issue}19272[#19272], {issue}19806[#19806])
* Makes index creation more friendly {pull}19450[#19450] (issue: {issue}9126[#9126])
* Clearer error when handling fractional time values {pull}19158[#19158] (issue: {issue}19102[#19102])
* Read Elasticsearch manifest via URL {pull}18999[#18999] (issue: {issue}18996[#18996])
* Throw if the local node is not set {pull}18963[#18963] (issue: {issue}18962[#18962])
* Bootstrap check for OnOutOfMemoryError and seccomp {pull}18756[#18756] (issue: {issue}18736[#18736])
* Log OS and JVM on startup {pull}18557[#18557]
* Add GC overhead logging {pull}18419[#18419]
* Refactor JvmGcMonitorService for testing {pull}18378[#18378]
* Default to server VM and add client VM check {pull}18155[#18155]
* Add system bootstrap checks escape hatch {pull}18088[#18088]
* Avoid sliced locked contention in internal engine {pull}18060[#18060] (issue: {issue}18053[#18053])
* Add heap size bootstrap check {pull}17728[#17728] (issue: {issue}17490[#17490])
* Remove hostname from NetworkAddress.format {pull}17601[#17601] (issue: {issue}17604[#17604])
* Bootstrapping bootstrap checks {pull}17595[#17595] (issues: {issue}17474[#17474], {issue}17570[#17570])
* Add max map count check {pull}16944[#16944]
* Remove PROTOTYPE from BulkItemResponse.Failure {pull}17433[#17433] (issue: {issue}17086[#17086])
* Throw an exception if Writeable.Reader reads null {pull}17332[#17332]
* Remove PROTOTYPE from RescorerBuilders {pull}17330[#17330]
* Port Primary Terms to master {pull}17044[#17044] (issues: {issue}14062[#14062], {issue}14651[#14651], {issue}17038[#17038])
* Use index UUID to lookup indices on IndicesService {pull}17001[#17001]
* Add -XX+AlwaysPreTouch JVM flag {pull}16937[#16937]
* Add max size virtual memory check {pull}16935[#16935]
* Use and test relative time in TransportBulkAction {pull}16916[#16916]
* Bump Elasticsearch version to 5.0.0-SNAPSHOT {pull}16862[#16862]
* Assert that we can write in all data-path on startup {pull}16745[#16745]
* Add G1GC check on startup {pull}16737[#16737] (issue: {issue}10740[#10740])
* Shards with heavy indexing should get more of the indexing buffer {pull}14121[#14121]
* Remove and ban ImmutableMap {pull}13939[#13939] (issue: {issue}13224[#13224])
* Finish banning ImmutableSet {pull}13820[#13820] (issue: {issue}13224[#13224])
* Removes and bans ImmutableSet {pull}13754[#13754] (issue: {issue}13224[#13224])
* Remove and ban ImmutableMap#entrySet {pull}13724[#13724]
* Forbid ForwardingSet {pull}13720[#13720] (issue: {issue}13224[#13224])

Dates::
* Improve TimeZoneRoundingTests error messages {pull}18895[#18895]
* Support full range of Java Long for epoch DateTime {pull}18509[#18509] (issue: {issue}17936[#17936])

Discovery::
* Do not log cluster service errors at after joining a master {pull}19705[#19705]
* Log warning if minimum_master_nodes set to less than quorum {pull}15625[#15625]
* Add a dedicate queue for incoming ClusterStates {pull}13303[#13303] (issue: {issue}13062[#13062])

Engine::
* Only try to read new segments info if we really flushed the index {pull}20474[#20474]
* Use _refresh instead of reading from Translog in the RT GET case {pull}20102[#20102]
* Remove writeLockTimeout from InternalEngine {pull}16930[#16930]
* Don't guard IndexShard#refresh calls by a check to isRefreshNeeded {pull}16118[#16118]
* Never call a listerner under lock in InternalEngine {pull}15786[#15786]
* Use System.nanoTime() to initialize Engine.lastWriteNanos {pull}14321[#14321]
* Flush big merges automatically if shard is inactive {pull}14275[#14275]
* Remove Engine.Create {pull}13955[#13955]
* Remove the disabled autogenerated id optimization from InternalEngine {pull}13857[#13857]

Exceptions::
* Improve startup exception {pull}20083[#20083]
* Make NotMasterException a first class citizen {pull}19385[#19385]
* Do not catch throwable {pull}19231[#19231]
* Make the index-too-old exception more explicit {pull}18438[#18438]
* Add index name in IndexAlreadyExistsException default message {pull}18274[#18274]
* Fix typos in exception/assert/log messages in core module. {pull}16649[#16649]
* Add field names to several mapping errors {pull}16508[#16508] (issue: {issue}16378[#16378])
* Add serialization support for more important IOExceptions {pull}15766[#15766]
* Adds exception objects to log messages. {pull}14827[#14827] (issue: {issue}10021[#10021])
* Add stack traces to logged exceptions where missing {pull}13825[#13825] (issue: {issue}10021[#10021])
* Remove reflection hacks from ElasticsearchException {pull}13796[#13796]
* Rename QueryParsingException to a more generic ParsingException {pull}13631[#13631]
* Add *Exception(Throwable cause) constructors/ call where appropriate {pull}13544[#13544] (issue: {issue}10021[#10021])

Expressions::
* improve date api for expressions/painless fields {pull}18658[#18658]
* Support geo_point fields in lucene expressions {pull}18096[#18096]
* Add support for .empty to expressions, and some docs improvements {pull}18077[#18077]

Geo::
* GeoBoundingBoxQueryBuilder should throw IAE when topLeft and bottomRight are the same coordinate {pull}18668[#18668] (issues: {issue}18458[#18458], {issue}18631[#18631])
* Enhanced lat/long error handling {pull}16833[#16833] (issue: {issue}16137[#16137])
* Fix a potential parsing problem in GeoDistanceSortParser {pull}17111[#17111]
* Geo: Add validation of shapes to ShapeBuilders {pull}15551[#15551] (issue: {issue}14416[#14416])
* Make remaining ShapeBuilders implement Writeable {pull}15010[#15010] (issue: {issue}14416[#14416])
* Geo: Remove internal `translated` flag from LineStringBuilder {pull}14969[#14969]
* Make PointBuilder, CircleBuilder & EnvelopeBuilder implement Writable  {pull}14933[#14933] (issue: {issue}14416[#14416])
* Merging BaseLineString and BasePolygonBuilder with subclass {pull}14887[#14887] (issue: {issue}14482[#14482])
* Moving static factory methods to ShapeBuilders {pull}14529[#14529]
* Remove InternalLineStringBuilder and InternalPolygonBuilder {pull}14482[#14482] (issue: {issue}14416[#14416])

Highlighting::
* Switch Highlighting to ObjectParser  {pull}17363[#17363]
* Use HighlightBuilder in SearchSourceBuilder {pull}15376[#15376] (issue: {issue}15044[#15044])
* Joint parsing of common global Hightlighter and subfield parameters {pull}15368[#15368] (issue: {issue}15285[#15285])
* Enable HighlightBuilder to create SearchContextHighlight {pull}15324[#15324]
*  Add fromXContent method to HighlightBuilder {pull}15157[#15157]

Index APIs::
* Add date-math support to `_rollover` {pull}20709[#20709]
* Add Shrink request source parser to parse create index request body {pull}18802[#18802]
* Fail hot_threads in a better way if unsupported by JDK {pull}15909[#15909]

Index Templates::
* Add "version" field to Templates {pull}20353[#20353] (issue: {issue}20171[#20171])
* Parse and validate mappings on index template creation {pull}8802[#8802] (issue: {issue}2415[#2415])

Ingest::
* Add "version" field to Pipelines {pull}20343[#20343] (issue: {issue}20171[#20171])
* Make it possible for Ingest Processors to access AnalysisRegistry {pull}20233[#20233]
* add ignore_missing option to convert,trim,lowercase,uppercase,grok,rename {pull}20194[#20194] (issue: {issue}19995[#19995])
* Add support for parameters to the script ingest processor {pull}20136[#20136]
* introduce the JSON Processor {pull}20128[#20128] (issue: {issue}20052[#20052])
* Allow rename processor to turn leaf fields into branch fields {pull}20053[#20053] (issue: {issue}19892[#19892])
* remove ability to set field value in script-processor configuration {pull}19981[#19981]
* Add REST _ingest/pipeline to get all pipelines {pull}19603[#19603] (issue: {issue}19585[#19585])
* Show ignored errors in verbose simulate result {pull}19404[#19404] (issue: {issue}19319[#19319])
* update foreach processor to only support one applied processor. {pull}19402[#19402] (issue: {issue}19345[#19345])
* Skip the execution of an empty pipeline {pull}19200[#19200] (issue: {issue}19192[#19192])
* Add `ignore_failure` option to all ingest processors {pull}18650[#18650] (issue: {issue}18493[#18493])
* new ScriptProcessor for Ingest {pull}18193[#18193]
* Expose underlying processor to blame for thrown exception within CompoundProcessor {pull}18342[#18342] (issue: {issue}17823[#17823])
* Avoid string concatentation in IngestDocument.FieldPath {pull}18108[#18108]
* add ability to specify multiple grok patterns {pull}18074[#18074] (issue: {issue}17903[#17903])
* add ability to disable ability to override values of existing fields in set processor {pull}17902[#17902] (issue: {issue}17659[#17659])
* Streamline option naming for several processors {pull}17892[#17892] (issue: {issue}17835[#17835])
* add automatic type conversion support to ConvertProcessor {pull}17263[#17263] (issue: {issue}17139[#17139])
* Give the foreach processor access to the rest of the document {pull}17172[#17172] (issue: {issue}17147[#17147])
* Added ingest statistics to node stats API {pull}16915[#16915]
* Add `ingest_took` to bulk response {pull}16876[#16876]
* Add ingest info to node info API, which contains a list of available processors {pull}16865[#16865]
* Use diffs for ingest metadata in cluster state {pull}16847[#16847]
* hide null-valued metadata fields from WriteableIngestDocument#toXContent {pull}16557[#16557]
* Ingest: use bulk thread pool for bulk request processing (was index before) {pull}16539[#16539] (issue: {issue}16503[#16503])
* Add foreach processor {pull}16432[#16432]
* revert PipelineFactoryError handling with throwing ElasticsearchParseException in ingest pipeline creation {pull}16355[#16355]
* Add processor tags to on_failure metadata in ingest pipeline {pull}16324[#16324] (issue: {issue}16202[#16202])
* catch processor/pipeline factory exceptions and return structured error responses {pull}16276[#16276] (issue: {issue}16010[#16010])
* Ingest: move get/put/delete pipeline methods to ClusterAdminClient {pull}16242[#16242]
* Geoip processor: remove redundant latitude and longitude fields and make location an object with lat and lon subfields {pull}16173[#16173]

Inner Hits::
* Change scriptFields member in InnerHitBuilder to set {pull}18092[#18092] (issue: {issue}5831[#5831])

Internal::
* Remove poor-mans compression in InternalSearchHit and friends {pull}20472[#20472]
* Don't register SearchTransportService handlers more than once {pull}20468[#20468]
* Unguice SearchModule {pull}20456[#20456]
* Deguice SearchService and friends {pull}20423[#20423]
* NodeStats classes to implement Writeable rather then Streamable {pull}20327[#20327]
* More info classes to implement Writeable rather than Streamable {pull}20288[#20288] (issue: {issue}20255[#20255])
* Internal: Split disk threshold monitoring from decider {pull}20018[#20018]
* Switching LockObtainFailedException over to ShardLockObtainFailedException {pull}19991[#19991] (issue: {issue}19978[#19978])
* update and delete by query requests to implement IndicesRequest.Replaceable {pull}19961[#19961]
* VersionFetchSubPhase should not use Versions#loadDocIdAndVersion {pull}19944[#19944]
* Remove useless PK lookup in IndicesTTLService {pull}19945[#19945]
* ignore some docker craziness in seccomp environment checks {pull}19754[#19754]
* Make Priority an enum {pull}19448[#19448]
* Snapshot UUIDs in blob names {pull}19421[#19421] (issues: {issue}18156[#18156], {issue}18815[#18815], {issue}19002[#19002], {issue}7540[#7540])
* Add RestController method for deprecating in one step {pull}19343[#19343]
* Tighten ensure atomic move cleanup {pull}19309[#19309] (issue: {issue}19036[#19036])
* Enable checkstyle ModifierOrder {pull}19214[#19214]
* Expose task information from NodeClient {pull}19189[#19189]
* Changed rest handler interface to take NodeClient {pull}19170[#19170]
* Deprecate ExceptionsHelper.detailedMessage {pull}19160[#19160] (issue: {issue}19069[#19069])
* Factor out ChannelBuffer from BytesReference {pull}19129[#19129]
* Cleanup Compressor interface {pull}19125[#19125]
* Hot methods redux {pull}19016[#19016] (issue: {issue}16725[#16725])
* Remove forked joda time BaseDateTime class {pull}18953[#18953]
* Support optional ctor args in ConstructingObjectParser {pull}18725[#18725]
* Remove thread pool from page cache recycler {pull}18664[#18664] (issue: {issue}18613[#18613])
* Do not automatically close XContent objects/arrays {pull}18549[#18549] (issue: {issue}18433[#18433])
* Remove use of a Fields class in snapshot responses {pull}18497[#18497]
* Removes multiple toXContent entry points for SnapshotInfo {pull}18494[#18494]
* Removes unused methods in the o/e/common/Strings class {pull}18346[#18346]
* Determine content length eagerly in HttpServer {pull}18203[#18203]
* Consolidate query generation in QueryShardContext {pull}18129[#18129]
* Make reset in QueryShardContext private {pull}18113[#18113]
* Remove Strings#splitStringToArray {pull}18110[#18110]
* Add toString() to GetResponse {pull}18102[#18102]
* ConstructingObjectParser adapts ObjectParser for ctor args {pull}17596[#17596] (issue: {issue}17352[#17352])
* Makes Script type writeable {pull}17908[#17908] (issue: {issue}17753[#17753])
* FiltersAggregatorBuilder: Don't create new context for inner parsing {pull}17851[#17851]
* Clean up serialization on some stats {pull}17832[#17832] (issue: {issue}17085[#17085])
* 	Normalize registration for SignificanceHeuristics {pull}17830[#17830] (issue: {issue}17085[#17085])
* Make (read|write)NamedWriteable public {pull}17829[#17829] (issue: {issue}17682[#17682])
* Use try-with-resource when creating new parser instances where possible {pull}17822[#17822]
* Don't pass XContentParser to ParseFieldRegistry#lookup {pull}17794[#17794]
* Internal: Remove threadlocal from document parser {pull}17764[#17764]
* Cut range aggregations to registerAggregation {pull}17757[#17757] (issue: {issue}17085[#17085])
* Remove ParseFieldMatcher from AbstractXContentParser {pull}17756[#17756] (issue: {issue}17417[#17417])
* Remove parser argument from methods where we already pass in a parse context {pull}17738[#17738]
* Switch SearchAfterBuilder to writeGenericValue {pull}17735[#17735] (issue: {issue}17085[#17085])
* Remove StreamableReader {pull}17729[#17729] (issue: {issue}17085[#17085])
* Cleanup nested, has_child & has_parent query builders for inner hits construction {pull}17719[#17719] (issue: {issue}11118[#11118])
* Make AllocationCommands NamedWriteables {pull}17661[#17661]
* Isolate StreamableReader {pull}17656[#17656] (issue: {issue}17085[#17085])
* Create registration methods for aggregations similar to those for queries {pull}17653[#17653] (issues: {issue}17085[#17085], {issue}17389[#17389])
* Remove PROTOTYPEs from QueryBuilders {pull}17632[#17632] (issue: {issue}17085[#17085])
* Remove registerQueryParser {pull}17608[#17608]
* ParseField#getAllNamesIncludedDeprecated to not return duplicate names {pull}17504[#17504]
* Rework a query parser and improve registration {pull}17458[#17458]
* Clean up QueryParseContext and don't hold it inside QueryRewrite/ShardContext {pull}17417[#17417]
* Remove PROTOTYPE from MLT.Item {pull}17481[#17481] (issue: {issue}17085[#17085])
* Remove PROTOTYPE from VersionType {pull}17480[#17480] (issue: {issue}17085[#17085])
* Remove PROTOTYPEs from highlighting {pull}17466[#17466] (issue: {issue}17085[#17085])
* Remove PROTOTYPEs from ingest {pull}17434[#17434] (issue: {issue}17085[#17085])
* Start to rework query registration {pull}17424[#17424]
* Factor out slow logs into Search and IndexingOperationListeners {pull}17398[#17398]
* Remove PROTOTYPE from Suggesters {pull}17370[#17370]
* Remove PROTOTYPE from SortBuilders {pull}17337[#17337] (issue: {issue}17085[#17085])
* Remove PROTOTYPE from ShapeBuilders {pull}17336[#17336] (issue: {issue}17085[#17085])
* Replace FieldStatsProvider with a method on MappedFieldType. {pull}17334[#17334]
* Stop using PROTOTYPE in NamedWriteableRegistry {pull}17284[#17284] (issue: {issue}17085[#17085])
* Support scheduled commands in current context {pull}17077[#17077]
* Thread limits {pull}17003[#17003]
* Remove leniency from segments info integrity checks {pull}16985[#16985] (issue: {issue}16973[#16973])
* Rename SearchServiceTransportAction to SearchTransportService {pull}16880[#16880]
* Decouple the TransportService and ClusterService {pull}16872[#16872] (issue: {issue}16788[#16788])
* Refactor bootstrap checks {pull}16844[#16844] (issues: {issue}16733[#16733], {issue}16835[#16835])
* Add LifecycleRunnable {pull}16752[#16752]
* Hot inlined methods in your area {pull}16725[#16725]
* Move IndicesQueryCache and IndicesRequestCache into IndicesService {pull}16603[#16603]
* Forbid use of java.security.MessageDigest#clone() {pull}16543[#16543] (issue: {issue}16479[#16479])
* Make IndicesWarmer a private class of IndexService {pull}16470[#16470]
* Simplify IndicesFieldDataCache and detach from guice {pull}16469[#16469]
* Uppercase ells ('L') in long literals {pull}16329[#16329] (issue: {issue}16279[#16279])
* ShardId equality and hash code inconsistency {pull}16319[#16319] (issue: {issue}16217[#16217])
* Ensure all resources are closed on Node#close() {pull}16316[#16316] (issue: {issue}13685[#13685])
* Make index uuid available in Index, ShardRouting & ShardId {pull}16217[#16217]
* Move RefreshTask into IndexService and use since task per index {pull}15933[#15933]
* Make IndexingMemoryController private to IndicesService {pull}15877[#15877]
* Cleanup IndexingOperationListeners infrastructure {pull}15875[#15875]
* Remove and forbid use of j.u.c.ThreadLocalRandom {pull}15862[#15862] (issue: {issue}15294[#15294])
* Fix IntelliJ query builder type inference issues {pull}15429[#15429]
* Remove and forbid use of Collections#shuffle(List) and Random#<init>() {pull}15299[#15299] (issue: {issue}15287[#15287])
* Remove and forbid use of the type-unsafe empty Collections fields {pull}15187[#15187]
* Move IndicesService.canDeleteShardContent to use IndexSettings {pull}15150[#15150] (issue: {issue}15059[#15059])
* Simplify MonitorService construction and detach from guice {pull}15035[#15035]
* Use Supplier for StreamInput#readOptionalStreamable {pull}14806[#14806]
* Add variable-length long encoding {pull}14780[#14780]
* Extend usage of IndexSetting class {pull}14731[#14731] (issue: {issue}14251[#14251])
* Fold SimilarityModule into IndexModule {pull}14284[#14284]
* Move to lucene BoostQuery {pull}14264[#14264]
* Use built-in method for computing hash code of longs {pull}14213[#14213]
* Refactor ShardFailure listener infrastructure {pull}14206[#14206]
* Add methods for variable-length encoding integral arrays {pull}14087[#14087]
* Fold IndexAliasesService into IndexService {pull}14044[#14044]
* Remove unneeded Module abstractions {pull}13944[#13944]
* Query refactoring: simplify IndexQueryParserService parse methods {pull}13938[#13938] (issue: {issue}13859[#13859])
* Remove and forbid use of com.google.common.collect.Iterators {pull}13916[#13916] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.collect.ImmutableCollection {pull}13909[#13909] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.io.Resources {pull}13908[#13908] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.hash.* {pull}13907[#13907] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.net.InetAddresses {pull}13905[#13905] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.collect.EvictingQueue {pull}13903[#13903] (issue: {issue}13224[#13224])
* Replace Guava cache with simple concurrent LRU cache {pull}13879[#13879]
* Remove ClusterSerivce and IndexSettingsService dependency from IndexShard {pull}13853[#13853]
* Start making RecoverySourceHandler unittestable {pull}13840[#13840]
* Remove IndexService dep. from IndexShard {pull}13797[#13797]
* Remove ES internal deletion policies in favour of Lucenes implementations {pull}13794[#13794]
* Move ShardTermVectorService to be on indices level as TermVectorService {pull}13786[#13786]
* Move ShardPercolateService creation into IndexShard {pull}13777[#13777]
* Remove `ExpressionScriptCompilationException` and `ExpressionScriptExecutionException` {pull}13742[#13742]
* Reduced the number of ClusterStateUpdateTask variants {pull}13735[#13735]
* Add a BaseParser helper for stream parsing {pull}13615[#13615]
* Remove and forbid use of com.google.common.primitives.Ints {pull}13596[#13596] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.math.LongMath {pull}13575[#13575] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.base.Joiner {pull}13572[#13572] (issue: {issue}13224[#13224])
* Replace and ban next batch of Guava classes {pull}13562[#13562] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.collect.Iterables {pull}13559[#13559] (issue: {issue}13224[#13224])
* Replace LoadingCache usage with a simple ConcurrentHashMap {pull}13552[#13552] (issue: {issue}13224[#13224])
* Use Supplier instead of Reflection {pull}13545[#13545]
* Remove and forbid use of com.google.common.base.Preconditions {pull}13540[#13540] (issue: {issue}13224[#13224])
* Remove and forbid use of guava Function, Charsets, Collections2 {pull}13533[#13533] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.collect.ImmutableSortedMap {pull}13525[#13525] (issue: {issue}13224[#13224])
* Remove and forbid use of several com.google.common.util. classes {pull}13524[#13524] (issue: {issue}13224[#13224])
* Cleanup SearchRequest & SearchRequestBuilder {pull}13518[#13518]
* Remove and forbid use of com.google.common.collect.Queues {pull}13498[#13498] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.base.Preconditions#checkNotNull {pull}13493[#13493] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.collect.Sets {pull}13463[#13463] (issue: {issue}13224[#13224])
* Remove and forbid use of com.google.common.collect.Maps {pull}13438[#13438] (issue: {issue}13224[#13224])
* Remove use of underscore as an identifier {pull}13353[#13353]
* Remove and forbid the use of com.google.common.base.Predicate(s)? {pull}13349[#13349] (issues: {issue}13224[#13224], {issue}13314[#13314])
* This commit removes com.google.common.io {pull}13302[#13302] (issue: {issue}13224[#13224])

Java API::
* Ensure PutMappingRequest.buildFromSimplifiedDef input are pairs {pull}19837[#19837] (issue: {issue}19836[#19836])
* Start from a random node number so that clients do not overload the first node configured {pull}14143[#14143]
* Switch QueryBuilders to new MatchPhraseQueryBuilder {pull}18753[#18753]
* Improve adding clauses to `span_near` and `span_or` query {pull}18485[#18485] (issue: {issue}18478[#18478])
* QueryBuilder does not need generics. {pull}18133[#18133]
* Remove copy constructors from request classes and TransportMessage type {pull}16640[#16640] (issue: {issue}15776[#15776])

Java REST Client::
* Add support for a RestClient path prefix {pull}20190[#20190]
* Add "Async" to the end of each Async RestClient method {pull}20172[#20172] (issue: {issue}20168[#20168])
* Allow RestClient to send array-based headers {pull}20151[#20151]
* Add response body to ResponseException error message {pull}19653[#19653] (issue: {issue}19653[#19653])
* Simplify Sniffer initialization and automatically create the default HostsSniffer {pull}19599[#19599]
* Remove duplicate dependency declaration for http client {pull}19580[#19580] (issue: {issue}19281[#19281])
* Add callback to customize http client settings {pull}19373[#19373]
* Rest Client: add short performRequest method variants without params and/or body {pull}19340[#19340] (issue: {issue}19312[#19312])

Logging::
* Ensure logging is initialized in CLI tools {pull}20575[#20575]
* Give useful error message if log config is missing {pull}20493[#20493]
* Complete Elasticsearch logger names {pull}20457[#20457] (issue: {issue}20326[#20326])
* Add node name to decider trace logging  {pull}20437[#20437] (issue: {issue}20379[#20379])
* Logging shutdown hack {pull}20389[#20389] (issue: {issue}20304[#20304])
* Disable console logging {pull}20387[#20387]
* Skip loading of jansi from log4j2 {pull}20334[#20334]
* Configure AWS SDK logging configuration {pull}20313[#20313] (issue: {issue}20294[#20294])
* Warn if unsupported logging configuration present {pull}20309[#20309]
* Size limit deprecation logs {pull}20287[#20287] (issues: {issue}20235[#20235], {issue}20254[#20254])
* Increase visibility of deprecation logger {pull}20254[#20254] (issue: {issue}11033[#11033])
* Add log message about enforcing bootstrap checks {pull}19451[#19451]
* Improve logging for batched cluster state updates {pull}19255[#19255]
* Send HTTP Warning Header(s) for any Deprecation Usage from a REST request {pull}17804[#17804] (issue: {issue}17687[#17687])
* Throw IllegalStateException when handshake fails due to version or cluster mismatch {pull}18676[#18676]

Mapping::
* Automatically downgrade text and keyword to string on indexes imported from 2.x {pull}20177[#20177]
* Do not parse numbers as both strings and numbers when not included in `_all`. {pull}20167[#20167]
* Don't index the `_version` field {pull}20132[#20132]
* The root object mapper should support updating `numeric_detection`, `date_detection` and `dynamic_date_formats`. {pull}20119[#20119] (issue: {issue}20111[#20111])
* Automatically upgrade analyzed string fields that have `index_options` or `position_increment_gap` set. {pull}20002[#20002] (issue: {issue}19974[#19974])
* Mappings: Support dots in field names in mapping parsing {pull}19899[#19899] (issue: {issue}19443[#19443])
* Save one utf8 conversion in KeywordFieldMapper. {pull}19867[#19867]
* Do not parse the created version from the settings every time a field is parsed. {pull}19824[#19824]
* Elasticsearch should reject dynamic templates with unknown `match_mapping_type`. {pull}17285[#17285] (issue: {issue}16945[#16945])
* Upgrade `string` fields to `text`/`keyword` even if `include_in_all` is set. {pull}19004[#19004] (issue: {issue}18974[#18974])
* Adds a methods to find (and dynamically create) the mappers for the parents of a field with dots in the field name {pull}18106[#18106] (issue: {issue}15951[#15951])
* Automatically upgrade analyzed strings with an analyzer to `text`. {pull}17861[#17861]
* Support dots in field names when mapping already exists {pull}17759[#17759] (issue: {issue}15951[#15951])
* Use the new points API to index numeric fields. {pull}17746[#17746] (issues: {issue}11513[#11513], {issue}16751[#16751], {issue}17007[#17007], {issue}17700[#17700])
* Simplify AllEntries, AllField and AllFieldMapper: {pull}17613[#17613]
* Make `parseMultiField` part of `parseField`. {pull}17313[#17313]
* Automatically add a sub keyword field to string dynamic mappings. {pull}17188[#17188]
* Remove friction from the mapping changes in 5.0. {pull}16991[#16991]
* Rework norms parameters for 5.0. {pull}16987[#16987]
* Moved dynamic field handling in doc parsing to end of parsing {pull}16798[#16798]
* Remove the MapperBuilders utility class. {pull}16609[#16609]
* Make the `index` property a boolean. {pull}16161[#16161]
* Remove the ability to enable doc values with the `fielddata.format` setting. {pull}16147[#16147]
* Be stricter about parsing boolean values in mappings. {pull}16146[#16146]
* Fix default doc values to be enabled when a field is not indexed. {pull}16141[#16141]
* Dynamically map floating-point numbers as floats instead of doubles. {pull}15319[#15319] (issue: {issue}13851[#13851])
* Simplify MetaDataMappingService. {pull}15217[#15217]
* Remove MergeMappingException. {pull}15177[#15177]

Network::
* Avoid early initializing Netty {pull}19819[#19819] (issue: {issue}5644[#5644])
* Network: Allow to listen on virtual interfaces. {pull}19568[#19568] (issues: {issue}17473[#17473], {issue}19537[#19537])
* Explicitly tell Netty to not use unsafe {pull}19786[#19786] (issues: {issue}19562[#19562], {issue}5624[#5624])
* Enable Netty 4 extensions {pull}19767[#19767] (issue: {issue}19526[#19526])
* Modularize netty {pull}19392[#19392]
* Simplify TcpTransport interface by reducing send code to a single send method {pull}19223[#19223]
* Do not start scheduled pings until transport start {pull}18702[#18702]

Packaging::
* Add quiet option to disable console logging {pull}20422[#20422] (issues: {issue}15315[#15315], {issue}16159[#16159], {issue}17220[#17220])
* Explicitly disable Netty key set replacement {pull}20249[#20249]
* Remove explicit parallel new GC flag {pull}18767[#18767]
* Use JAVA_HOME or java.exe in PATH like the Linux scripts do {pull}18685[#18685] (issue: {issue}4913[#4913])
* Don't mkdir directly in deb init script {pull}18503[#18503] (issue: {issue}18307[#18307])
* Increase default heap size to 2g {pull}18311[#18311] (issues: {issue}16334[#16334], {issue}17686[#17686], {issue}18309[#18309])
* Switch init.d scripts to use bash {pull}18308[#18308] (issue: {issue}18259[#18259])
* Switch scripts to use bash {pull}18251[#18251] (issue: {issue}14002[#14002])
* Further simplifications of plugin script {pull}18239[#18239] (issue: {issue}18207[#18207])
* Pass ES_JAVA_OPTS to JVM for plugins script {pull}18140[#18140] (issue: {issue}16790[#16790])
* Remove unnecessary sleep from init script restart {pull}17966[#17966]
* Explicitly set packaging permissions {pull}17912[#17912] (issue: {issue}17634[#17634])
* rpm uses non-portable `--system` flag to `useradd` {pull}14596[#14596] (issue: {issue}14211[#14211])
* Adding JAVA_HOME to documents and env config file {pull}11338[#11338] (issue: {issue}11291[#11291])
* Added RPM metadata {pull}17477[#17477]
* Elasticsearch ownership for data, logs, and configs {pull}17197[#17197] (issue: {issue}12688[#12688])
* Fail early on JDK with compiler bug {pull}16418[#16418] (issues: {issue}16097[#16097], {issue}16362[#16362])
* Make security non-optional {pull}16176[#16176]
* Remove RuntimePermission("accessDeclaredMembers") {pull}15378[#15378]
* Remove Guava as a dependency {pull}14055[#14055] (issue: {issue}13224[#13224])
* Remove Guava as a dependency {pull}14054[#14054] (issue: {issue}13224[#13224])

Percolator::
* Also support query term extract for queries wrapped inside a FunctionScoreQuery {pull}19184[#19184]
* Add support for synonym query to percolator query term extraction {pull}19066[#19066]
* Add percolator query extraction support for dismax query {pull}18845[#18845]
* Improve percolate query performance by not verifying certain candidate matches {pull}18696[#18696]
* Improve percolator query term extraction {pull}18610[#18610]
* PercolatorQueryBuilder cleanup by using MemoryIndex#fromDocument(...) helper {pull}17669[#17669] (issue: {issue}9386[#9386])
* Add scoring support to the percolator query {pull}17385[#17385] (issue: {issue}13827[#13827])
* Add query extract support for the blended term query and the common terms query {pull}17347[#17347]
* Add support for several span queries in ExtractQueryTermsService {pull}17323[#17323]
* Add support for TermsQuery in ExtractQueryTermsService {pull}17316[#17316]
* Replace percolate APIs with a percolator query {pull}16349[#16349] (issues: {issue}10741[#10741], {issue}11264[#11264], {issue}13176[#13176], {issue}13978[#13978], {issue}4317[#4317], {issue}7297[#7297])

Plugin Analysis Kuromoji::
* Add nbest options and NumberFilter {pull}17173[#17173]

Plugin Discovery EC2::
* Use `DefaultAWSCredentialsProviderChain` AWS SDK class for credentials {pull}19561[#19561] (issue: {issue}19556[#19556])
* Support new Asia Pacific (Mumbai) ap-south-1 AWS region {pull}19112[#19112] (issue: {issue}19110[#19110])
* Add support for proxy authentication for s3 and ec2 {pull}15293[#15293] (issue: {issue}15268[#15268])

Plugin Discovery GCE::
* Allow `_gce_` network when not using discovery gce {pull}15765[#15765] (issue: {issue}15724[#15724])

Plugin Ingest Attachment::
* Minor attachment processor improvements {pull}16574[#16574]

Plugin Lang Painless::
* Disable regexes by default in painless {pull}20427[#20427] (issue: {issue}20397[#20397])
* Catch OutOfMemory and StackOverflow errors in Painless {pull}19936[#19936]
* Change Painless Tree Structure for Variable/Method Chains {pull}19459[#19459]
* Add replaceAll and replaceFirst {pull}19070[#19070]
* Painless Initializers {pull}19012[#19012]
* Add augmentation {pull}19003[#19003]
* Infer lambda arguments/return type {pull}18983[#18983]
* Fix explicit casts and improve tests. {pull}18958[#18958]
* Add lambda captures {pull}18954[#18954]
* improve Debugger to print code even if it hits exception {pull}18932[#18932] (issue: {issue}1[#1])
* Move semicolon hack into lexer {pull}18931[#18931]
* Add flag support to regexes {pull}18927[#18927]
* improve lambda syntax (allow single expression) {pull}18924[#18924]
* Remove useless dropArguments in megamorphic cache {pull}18913[#18913]
* non-capturing lambda support {pull}18911[#18911] (issue: {issue}18824[#18824])
* fix bugs in operators and more improvements for the dynamic case {pull}18899[#18899]
* improve unary operators and cleanup tests {pull}18867[#18867] (issue: {issue}18849[#18849])
* Add support for the find operator (=~) and the match operator (==~) {pull}18858[#18858]
* Remove casts and boxing for dynamic math {pull}18849[#18849] (issue: {issue}18847[#18847])
* Refactor def math {pull}18847[#18847]
* Add support for /regex/ {pull}18842[#18842]
* Array constructor references {pull}18831[#18831]
* Method references to user functions {pull}18828[#18828]
* Add } as a delimiter.  {pull}18827[#18827] (issue: {issue}18821[#18821])
* Add Lambda Stub Node {pull}18824[#18824]
* Add capturing method references {pull}18818[#18818] (issue: {issue}18748[#18748])
* Add Functions to Painless {pull}18810[#18810]
* Add Method to Get New MethodWriters {pull}18771[#18771]
* Static For Each {pull}18757[#18757]
* Method reference support {pull}18748[#18748] (issue: {issue}18578[#18578])
* Add support for the new Java 9 MethodHandles#arrayLength() factory {pull}18734[#18734]
* Improve painless compile-time exceptions {pull}18711[#18711] (issue: {issue}18600[#18600])
* add java.time packages to painless whitelist {pull}18621[#18621]
* Add Function Reference Stub to Painless {pull}18578[#18578]
* improve painless whitelist coverage of java api {pull}18533[#18533]
* Definition cleanup {pull}18463[#18463]
* Made def variable casting consistent with invokedynamic rules {pull}18425[#18425]
* Use Java 9 Indy String Concats, if available {pull}18400[#18400] (issue: {issue}18398[#18398])
* Add method overloading based on arity {pull}18385[#18385]
* Refactor WriterUtils to extend ASM GeneratorAdapter {pull}18382[#18382]
* Whitelist expansion {pull}18372[#18372]
* Remove boxing when loading and storing values in "def" fields/arrays, remove boxing onsimple method calls of "def" methods {pull}18359[#18359]
* Some cleanups {pull}18352[#18352]
* Use isAssignableFrom instead of relying on ClassCastException {pull}18350[#18350]
* Build descriptor of array and field load/store in code {pull}18338[#18338]
* Rename the dynamic call site factory to DefBootstrap {pull}18335[#18335]
* Cleanup of DynamicCallSite {pull}18323[#18323]
* Improve exception stacktraces {pull}18319[#18319]
* Make Line Number Available in Painless {pull}18298[#18298]
* Remove input, support params instead {pull}18287[#18287]
* Decouple ANTLR AST from Painless {pull}18286[#18286]
* _value support in painess? {pull}18284[#18284]
* Long priority over Float {pull}18282[#18282]
* _score as double, not float {pull}18277[#18277]
* Add 'ctx' keyword to painless. {pull}18264[#18264]
* Painless doc access {pull}18262[#18262]
* Retrieve _score directly from Scorer {pull}18258[#18258]
* Implement needsScore() correctly. {pull}18247[#18247]
* Add synthetic length property as alias to Lists, so they can be used like arrays {pull}18241[#18241]
* Use better typing for dynamic method calls {pull}18234[#18234]
* Array load/store and length with invokedynamic {pull}18232[#18232] (issue: {issue}18201[#18201])
* Switch painless dynamic calls to invokedynamic, remove perf hack/cheat {pull}18201[#18201]
* Add fielddata accessors (.value/.values/.distance()/etc) {pull}18169[#18169]
* painless: optimize/simplify dynamic field and method access {pull}18151[#18151]
* Painless: Single-Quoted Strings {pull}18150[#18150]
* Painless Clean Up {pull}17428[#17428]
* Make Painless a Module {pull}16755[#16755]
* Minor Clean up {pull}16457[#16457]
* Remove Extra String Concat Token {pull}16382[#16382]

Plugin Mapper Attachment::
* minor attachments cleanups: IDE test support and EPUB format {pull}14626[#14626]

Plugin Mapper Size::
* Add doc values support to the _size field in the mapper-size plugin {pull}19217[#19217] (issue: {issue}18334[#18334])

Plugin Repository Azure::
* Support global `repositories.azure.` settings {pull}15141[#15141] (issue: {issue}13776[#13776])
* Add timeout settings (default to 5 minutes) {pull}15080[#15080] (issue: {issue}14277[#14277])
* Remove AbstractLegacyBlobContainer {pull}14650[#14650] (issue: {issue}13434[#13434])

Plugin Repository HDFS::
* merge current hdfs improvements to master {pull}15588[#15588]

Plugin Repository S3::
* Extract AWS Key from KeyChain instead of using potential null value {pull}19560[#19560] (issues: {issue}18703[#18703], {issue}19557[#19557])
* Check that S3 setting `buffer_size` is always lower than `chunk_size` {pull}17274[#17274] (issue: {issue}17244[#17244])

Plugins::
* Revert "Display plugins versions" {pull}20807[#20807] (issues: {issue}18683[#18683], {issue}20668[#20668])
* Provide error message when plugin id is missing {pull}20660[#20660]
* Print message when removing plugin with config {pull}20338[#20338]
* Plugins: Update official plugin location with unified release {pull}19996[#19996]
* Allow plugins to upgrade global custom metadata on startup {pull}19962[#19962]
* Switch aggregations from push to pull {pull}19839[#19839]
* Display plugins versions {pull}18683[#18683]
* Add ScriptService to dependencies available for plugin components {pull}19770[#19770]
* Make NamedWriteableRegistry immutable and add extension point for named writeables {pull}19764[#19764]
* Log one plugin info per line {pull}19441[#19441]
* Make rest headers registration pull based {pull}19440[#19440]
* Add resource watcher to services available for plugin components {pull}19401[#19401]
* Add some basic services to createComponents for plugins {pull}19380[#19380]
* Make plugins closeable {pull}19137[#19137]
* Plugins: Add status bar on download {pull}18695[#18695]
* Add did-you-mean for plugin cli {pull}18942[#18942] (issue: {issue}18896[#18896])
* Plugins: Remove name() and description() from api {pull}18906[#18906]
* Emit nicer error message when trying to install unknown plugin {pull}18876[#18876] (issue: {issue}17226[#17226])
* Add plugin information for Verbose mode {pull}18051[#18051] (issue: {issue}16375[#16375])
* Cli: Improve output for usage errors {pull}17938[#17938]
* Cli: Add verbose output with zip url when installing plugin {pull}17662[#17662] (issue: {issue}17529[#17529])
* PluginManager: Add xpack as official plugin {pull}17227[#17227]
* CliTool: Cleanup and document Terminal {pull}16443[#16443]
* Plugin cli: Improve maven coordinates detection {pull}16384[#16384] (issue: {issue}16376[#16376])
* Enforce plugin zip does not contain zip entries outside of the plugin dir {pull}16361[#16361]
* CliTool: Allow unexpected exceptions to propagate {pull}16359[#16359]
* Reduce complexity of plugin cli {pull}16336[#16336]
* Remove Plugin.onIndexService. {pull}15029[#15029] (issue: {issue}14896[#14896])
* Open up QueryCache and SearcherWrapper extension points {pull}14303[#14303]

Query DSL::
* Throw exception when multiple field names are provided as part of query short syntax {pull}19871[#19871] (issue: {issue}19791[#19791])
* Query parsers to throw exception when multiple field names are provided {pull}19791[#19791] (issue: {issue}19547[#19547])
* Allow empty json object in request body in `_count` API {pull}19595[#19595] (issue: {issue}19422[#19422])
* Treat zero token in `common` terms query as MatchNoDocsQuery {pull}18656[#18656]
* Handle empty query bodies at parse time and remove EmptyQueryBuilder {pull}17624[#17624] (issues: {issue}17540[#17540], {issue}17541[#17541])
* Enforce MatchQueryBuilder#maxExpansions() to be strictly positive {pull}18464[#18464]
* Don't allow `fuzziness` for `multi_match` types `cross_fields`, `phrase` and `phrase_prefix` {pull}18322[#18322] (issues: {issue}6866[#6866], {issue}7764[#7764])
* Add MatchNoDocsQuery, a query that matches no documents and prints the reason why in the toString method. {pull}17780[#17780]
* Adds `ignore_unmapped` option to geo queries {pull}17751[#17751]
* Adds `ignore_unmapped` option to nested and P/C queries {pull}17748[#17748]
* SimpleQueryParser should call MappedFieldType.termQuery when appropriate. {pull}17678[#17678]
* An `exists` query on an object should query a single term. {pull}17186[#17186] (issue: {issue}17131[#17131])
* Function Score Query: make parsing stricter {pull}16617[#16617] (issue: {issue}16583[#16583])
* Parsers should throw exception on unknown objects {pull}14255[#14255] (issue: {issue}10974[#10974])
* UNICODE_CHARACTER_CLASS fix {pull}11598[#11598] (issue: {issue}10146[#10146])

Query Refactoring::
* Add infrastructure to rewrite query builders {pull}16599[#16599]
* Switch geo validation to enum {pull}13672[#13672] (issue: {issue}13608[#13608])

REST::
* Add a REST spec for the create API {pull}20924[#20924]
* Add response params to REST params did you mean {pull}20753[#20753] (issues: {issue}20722[#20722], {issue}20747[#20747])
* Add did you mean to strict REST params {pull}20747[#20747] (issue: {issue}20722[#20722])
* Add exclusion support to response filtering {pull}19865[#19865]
* Only write forced_refresh if we forced a refresh {pull}19669[#19669] (issue: {issue}19629[#19629])
* Add Location header to the index, update, and create APIs {pull}19509[#19509] (issue: {issue}19079[#19079])
* Add support for `wait_for_events` to the `_cluster/health` REST endpoint {pull}19432[#19432] (issue: {issue}19419[#19419])
* Rename Search Template REST spec names {pull}19178[#19178]
* Adding status field in _msearch error request bodies {pull}18586[#18586] (issue: {issue}18013[#18013])
* Add semicolon query string parameter delimiter {pull}18186[#18186] (issue: {issue}18175[#18175])
* Enable HTTP compression by default with compression level 3 {pull}18066[#18066] (issue: {issue}7309[#7309])
* Allow JSON with unquoted field names by enabling system property {pull}17801[#17801] (issue: {issue}17674[#17674])
* More robust handling of CORS HTTP Access Control {pull}16092[#16092]
* Add option to exclude based on paths in XContent {pull}16017[#16017]

Recovery::
* Pass on maxUnsafeAutoIdTimestamp on recovery / relocation {pull}20300[#20300]
* Non-blocking primary relocation hand-off {pull}19013[#19013] (issues: {issue}15900[#15900], {issue}18553[#18553])
* index shard should be able to cancel check index on close. {pull}18839[#18839] (issue: {issue}12011[#12011])
* TransportNodesListGatewayStartedShards should fall back to disk based index metadata if not found in cluster state {pull}17663[#17663] (issue: {issue}17630[#17630])
* Recover broken IndexMetaData as closed {pull}17187[#17187]
* Relocation source should be marked as relocating before starting recovery to primary relocation target {pull}16500[#16500]
* Operation counter for IndexShard {pull}15956[#15956] (issue: {issue}15900[#15900])
* Primary relocation handoff {pull}15900[#15900] (issues: {issue}15532[#15532], {issue}16274[#16274], {issue}19013[#19013])
* Remove recovery threadpools and throttle outgoing recoveries on the master {pull}15372[#15372]
* Refactor StoreRecoveryService to be a simple package private util class {pull}13766[#13766]

Reindex API::
* Only ask for `_version` we need it {pull}19693[#19693] (issue: {issue}19135[#19135])
* Use fewer threads when reindexing-from-remote {pull}19636[#19636]
* Support authentication with reindex-from-remote {pull}19310[#19310]
* Support requests_per_second=-1 to mean no throttling in reindex {pull}19101[#19101] (issue: {issue}19089[#19089])
* Implement ctx.op = "delete" on _update_by_query and _reindex {pull}18614[#18614] (issue: {issue}18043[#18043])
* Make Reindex cancellation tests more uniform {pull}18498[#18498]
* Makes DeleteByQueryRequest implements IndicesRequest {pull}18466[#18466]
* Teach reindex to retry on search failures {pull}18331[#18331] (issue: {issue}18059[#18059])
* Remove ReindexResponse in favor of BulkIndexByScrollResponse {pull}18205[#18205]
* Stricter validation of Reindex's requests_per_second {pull}18028[#18028]
* Properly mark reindex's child tasks as child tasks {pull}17770[#17770]
* Make reindex throttling dynamic {pull}17262[#17262]
* Throttling support for reindex {pull}17039[#17039]
* Add ingest pipeline support to reindex {pull}16932[#16932]

Scripting::
* Parse script on storage instead of on retrieval {pull}20356[#20356]
* Migrate elasticsearch native script examples to the main repo {pull}19334[#19334] (issue: {issue}14662[#14662])
* Remove ClusterState from compile api {pull}19136[#19136]
* Mustache: Render Map as JSON {pull}18856[#18856] (issue: {issue}18970[#18970])
*  Compile each Groovy script in its own classloader {pull}18918[#18918] (issue: {issue}18572[#18572])
* Include script field even if it value is null {pull}18384[#18384] (issue: {issue}16408[#16408])
* Skipping hidden files compilation for script service {pull}16286[#16286] (issue: {issue}15269[#15269])
* Rename Plan A to Painless {pull}16245[#16245]
* Add plumbing for script compile-time parameters {pull}15464[#15464]
* Factor mustache -> modules/lang-mustache {pull}15328[#15328]

Scroll::
* Add an index setting to limit the maximum number of slices allowed in a scroll request. {pull}18782[#18782]

Search::
* Limit batch size when scrolling {pull}19367[#19367] (issue: {issue}19249[#19249])
* Record method counts while profiling query components {pull}18302[#18302]
* Change default similarity to BM25 {pull}18948[#18948] (issue: {issue}18944[#18944])
* Add a parameter to cap the number of searches the msearch api will concurrently execute {pull}18721[#18721]
* Introduces GeoValidationMethod to GeoDistanceSortBuilder {pull}18036[#18036]
* Switches from empty boolean query to matchNoDocs {pull}18007[#18007] (issue: {issue}17981[#17981])
* Allow binary sort values. {pull}17959[#17959] (issues: {issue}17971[#17971], {issue}6077[#6077])
* Fail query if it contains very large rescores {pull}17917[#17917] (issue: {issue}17522[#17522])
* Type filters should not have a performance impact when there is a single type. {pull}17350[#17350]
* Store _all payloads on 1 byte instead of 4. {pull}16899[#16899]
* Refuse to load fields from _source when using the `fields` option and support wildcards.  {pull}15017[#15017] (issues: {issue}10783[#10783], {issue}14489[#14489])
* Add response into ClearScrollResponse {pull}13835[#13835] (issue: {issue}13817[#13817])
* Shuffle shards for _only_nodes + support multiple specifications like cluster API  {pull}12575[#12575] (issues: {issue}12546[#12546], {issue}12700[#12700])

Search Refactoring::
* Removes the now obsolete SearchParseElement implementations {pull}18233[#18233]
* Remove RescoreParseElement {pull}17441[#17441]
* Remove HighlighterParseElement {pull}17303[#17303]
* Move top level parsing of sort element to SortBuilder {pull}17248[#17248]
* Switch to using refactored SortBuilder instead of using BytesReference in serialization {pull}17205[#17205] (issues: {issue}17146[#17146], {issue}17257[#17257])
* Add build() method to SortBuilder implementations {pull}17146[#17146] (issue: {issue}10217[#10217])
* Refactoring of Suggestions {pull}17096[#17096] (issue: {issue}10217[#10217])
* Move sort `order` field up into SortBuilder {pull}17035[#17035]
* Moves SortParser:parse(...) to only require QueryShardContext {pull}16999[#16999] (issue: {issue}15178[#15178])
* Change internal representation of suggesters  {pull}16873[#16873]
* Make GeoDistanceSortBuilder serializable, 2nd try {pull}16572[#16572] (issues: {issue}15178[#15178], {issue}16151[#16151])
* Move missing() from SortBuilder interface to class {pull}16225[#16225] (issues: {issue}15178[#15178], {issue}16151[#16151])
* Remove deprecated parameters from ScriptSortBuilder {pull}16153[#16153] (issue: {issue}15178[#15178])
* Refactor GeoSortBuilder {pull}16151[#16151] (issue: {issue}15178[#15178])
* Refactor FieldSortBuilder {pull}16127[#16127] (issue: {issue}15178[#15178])
* Make sort order enum writable. {pull}16124[#16124] (issue: {issue}15178[#15178])
* Make DistanceUnit writable. {pull}16122[#16122] (issue: {issue}15178[#15178])
* RescoreBuilder: Add parsing and creating of RescoreSearchContext {pull}16014[#16014] (issue: {issue}15559[#15559])
* Make RescoreBuilder and nested QueryRescorer Writable {pull}15953[#15953] (issue: {issue}15559[#15559])
* Explain api: move query parsing to the coordinating node {pull}14270[#14270]
* Switch query parsers to use ParseField  {pull}14249[#14249] (issue: {issue}8964[#8964])
* Refactoring of Aggregations {pull}14136[#14136]

Sequence IDs::
* Persist sequence number checkpoints {pull}18949[#18949] (issue: {issue}10708[#10708])
* Add sequence numbers to cat shards API {pull}18772[#18772]

Settings::
* Add precise logging on unknown or invalid settings {pull}20951[#20951] (issue: {issue}20946[#20946])
* Make `action.auto_create_index` setting a dynamic cluster setting {pull}20274[#20274] (issue: {issue}7513[#7513])
* Removes space between # and the setting in elasticsearch.yml {pull}20094[#20094] (issue: {issue}20090[#20090])
* Validates new dynamic settings from the current state {pull}19122[#19122] (issue: {issue}19046[#19046])
* Improve error message if a setting is not found {pull}18920[#18920] (issue: {issue}18663[#18663])
* Cleanup placeholder replacement {pull}17335[#17335]
* Switch to registered Settings for all IndexingMemoryController settings {pull}17778[#17778] (issue: {issue}17442[#17442])
* Add guard against null-valued settings {pull}17310[#17310] (issue: {issue}17292[#17292])
* Useful error message for null property placeholder {pull}17293[#17293] (issue: {issue}17292[#17292])
* Archive cluster level settings if unknown or broken {pull}17246[#17246]
* Improve error message if setting is not found {pull}17230[#17230]
* Improve upgrade experience of node level index settings {pull}17223[#17223] (issue: {issue}17187[#17187])
* Settings with complex matchers should not overlap {pull}16754[#16754]
* Moves GCE settings to the new infra {pull}16722[#16722] (issue: {issue}16720[#16720])
* Add filtering support within Setting class {pull}16629[#16629] (issue: {issue}16598[#16598])
* Migrate AWS settings to new settings infrastructure {pull}16602[#16602] (issue: {issue}16293[#16293])
* Remove `gateway.initial_meta` and always rely on min master nodes {pull}16446[#16446]
* Rewrite SettingsFilter to be immutable {pull}16425[#16425]
* Simplify azure settings {pull}16363[#16363]
* Convert PageCacheRecycler settings {pull}16341[#16341]
* Monitor settings {pull}16313[#16313]
* Cut over tribe node settings to new settings infra {pull}16311[#16311]
* Convert multcast plugin settings to the new infra {pull}16295[#16295]
* Convert `request.headers.*` to the new settings infra {pull}16292[#16292]
* Migrate Azure settings to new settings infrastructure {pull}16291[#16291]
* Validate logger settings and allow them to be reset via API {pull}16289[#16289]
* Switch NodeEnvironment's settings to new settings {pull}16273[#16273]
* Simplify AutoCreateIndex and add more tests {pull}16270[#16270]
* Convert several pending settings {pull}16269[#16269]
* Migrate query caching settings to the new settings infra. {pull}16267[#16267]
* Convert `action.auto_create_index` and `action.master.force_local` to the new settings infra {pull}16263[#16263]
* Convert `cluster.routing.allocation.type` and `processors` to the new settings infra. {pull}16238[#16238]
* Validate tribe node settings on startup {pull}16237[#16237]
* Move node.client, node.data, node.master, node.local and node.mode to new settings infra {pull}16230[#16230]
* Moved http settings to the new settings infrastructure {pull}16188[#16188]
* Migrate network service to the new infra {pull}16187[#16187]
* Convert client.transport settings to new infra {pull}16183[#16183]
* Move discovery.* settings to new Setting infrastructure {pull}16182[#16182]
* Change over to o.e.common.settings.Setting for http settings {pull}16181[#16181]
* Convert "path.*" and "pidfile" to new settings infra {pull}16180[#16180]
* Migrate repository settings to the new settings API {pull}16178[#16178]
* Convert "indices.*" settings to new infra. {pull}16177[#16177]
* Migrate gateway settings to the new settings API. {pull}16175[#16175]
* Convert several node and test level settings {pull}16172[#16172]
* Run Metadata upgrade tool on every version {pull}16168[#16168]
* Check for invalid index settings on metadata upgrade {pull}16156[#16156]
* Validate the settings key if it's simple chars separated by `.` {pull}16120[#16120]
* Validate known global settings on startup {pull}16091[#16091]
* Cut over all index scope settings to the new setting infrastrucuture {pull}16054[#16054] (issues: {issue}12790[#12790], {issue}12854[#12854], {issue}16032[#16032], {issue}6732[#6732])
* Remove updatability of `index.flush_on_close` {pull}15964[#15964] (issue: {issue}15955[#15955])
* Move all dynamic settings and their config classes to the index level {pull}15955[#15955] (issue: {issue}6732[#6732])
* Always require units for bytes and time settings {pull}15948[#15948] (issue: {issue}11437[#11437])
* Make MetaData parsing less lenient. {pull}15828[#15828]
* Move async translog sync logic into IndexService {pull}15584[#15584]
* Remove `index.merge.scheduler.notify_on_failure` and default to `true` {pull}15572[#15572] (issue: {issue}15570[#15570])
* Remove cache concurrency level settings that no longer apply {pull}14210[#14210] (issues: {issue}13224[#13224], {issue}13717[#13717], {issue}7836[#7836])

Similarities::
* Defining a global default similarity {pull}16682[#16682] (issue: {issue}16594[#16594])

Snapshot/Restore::
* Delete differing files in the store before restoring {pull}20220[#20220] (issue: {issue}20148[#20148])
* Adds ignoreUnavailable option to the snapshot status API {pull}20066[#20066] (issue: {issue}18522[#18522])
* Check restores in progress before deleting a snapshot {pull}19853[#19853]
* Snapshot repository cleans up empty index folders {pull}19751[#19751]
* BlobContainer#writeBlob no longer can overwrite a blob {pull}19749[#19749] (issue: {issue}15579[#15579])
* More resilient blob handling in snapshot repositories {pull}19706[#19706] (issues: {issue}18156[#18156], {issue}18815[#18815], {issue}19421[#19421], {issue}7540[#7540])
* Adding repository index generational files {pull}19002[#19002] (issue: {issue}18156[#18156])
* Raised IOException on deleteBlob {pull}18815[#18815] (issue: {issue}18530[#18530])
* Adds UUIDs to snapshots {pull}18228[#18228] (issue: {issue}18156[#18156])
* Clarify the semantics of the BlobContainer interface {pull}18157[#18157] (issue: {issue}15580[#15580])
* Change BlobPath.buildAsString() method {pull}18461[#18461]
* Remove the Snapshot class in favor of using SnapshotInfo {pull}18167[#18167] (issue: {issue}18156[#18156])

Stats::
* Add mem section back to cluster stats {pull}20255[#20255] (issue: {issue}17278[#17278])
* Add network types to cluster stats {pull}20144[#20144]
* Add missing field type in the FieldStats response. {pull}19241[#19241] (issue: {issue}17750[#17750])
* Expose the ClusterInfo object in the allocation explain output {pull}19106[#19106] (issue: {issue}14405[#14405])
* Add total_indexing_buffer/_in_bytes to nodes info API {pull}18914[#18914] (issue: {issue}18651[#18651])
* Allow FieldStatsRequest to disable cache {pull}18900[#18900]
* Remove index_writer_max_memory stat from segment stats {pull}18651[#18651] (issues: {issue}14121[#14121], {issue}7440[#7440])
* Move DocStats under Engine to get more accurate numbers {pull}18587[#18587]
* Do not return fieldstats information for fields that exist in the mapping but not in the index. {pull}18212[#18212] (issue: {issue}17980[#17980])
* Add whether the shard state fetch is pending to the allocation explain API {pull}18119[#18119] (issue: {issue}17372[#17372])
* Add Failure Details to every NodesResponse {pull}17964[#17964] (issue: {issue}3740[#3740])
* Add I/O statistics on Linux {pull}15915[#15915] (issue: {issue}15296[#15296])
* Add points to SegmentStats. {pull}17775[#17775] (issue: {issue}16974[#16974])
* Remove FieldStats.Float. {pull}17749[#17749]
* Show configured and remaining delay for an unassigned shard. {pull}17515[#17515] (issue: {issue}17372[#17372])
* indexing stats now contain indexing ops from recovery  [ISSUE] {pull}17412[#17412]
* Normalize unavailable load average {pull}16061[#16061] (issues: {issue}12049[#12049], {issue}14741[#14741], {issue}15907[#15907], {issue}15932[#15932], {issue}15934[#15934])
* Add load averages to OS stats on FreeBSD {pull}15934[#15934] (issue: {issue}15917[#15917])
* Expose pending cluster state queue size in node stats {pull}14040[#14040] (issue: {issue}13610[#13610])

Store::
* Use `mmapfs` by default. {pull}17616[#17616] (issue: {issue}16983[#16983])
* Remove support for legacy checksums {pull}16931[#16931]
* Rename index folder to index_uuid {pull}16442[#16442] (issues: {issue}13264[#13264], {issue}13265[#13265], {issue}14512[#14512], {issue}14932[#14932], {issue}15853[#15853])

Suggesters::
* Move SuggestUtils methods to their respective caller classes {pull}19914[#19914] (issue: {issue}19906[#19906])
* Remove payload option from completion suggester {pull}19877[#19877] (issue: {issue}19536[#19536])
* Add bwc support for reading  pre-5.0 completion index {pull}17602[#17602]

Task Manager::
* Rename Task Persistence into Storing Task Results {pull}19982[#19982]
* Fetch result when wait_for_completion {pull}18905[#18905]
* Create get task API that falls back to the .tasks index {pull}18682[#18682]
* Add ability to store results for long running tasks {pull}17928[#17928]
* Move parentTaskId into TransportRequest  {pull}17872[#17872]
* Shorten the serialization of the empty TaskId {pull}17870[#17870]
* Expose whether a task is cancellable in the _tasks list API {pull}17464[#17464] (issue: {issue}17369[#17369])
* Add ability to group tasks by common parent {pull}17341[#17341]
* Add start time and duration to tasks {pull}16829[#16829]
* Combine node name and task id into single string task id {pull}16744[#16744]
* Add task status {pull}16356[#16356] (issue: {issue}16344[#16344])
* Extend tracking of parent tasks to master node, replication and broadcast actions {pull}15931[#15931]

Translog::
* Fsync documents in an async fashion {pull}20145[#20145]
* Add checksumming and versions to the Translog's Checkpoint files {pull}19797[#19797]
* Beef up Translog testing with random channel exceptions {pull}18997[#18997]
* Do not replay into translog on local recovery {pull}18547[#18547]
* FSync translog outside of the writers global lock {pull}18360[#18360]
* Remove ChannelReference and simplify Views {pull}15898[#15898]
* Simplify TranslogWriter to always write to a stream {pull}15771[#15771]
* Remove TranslogService and fold it into synchronous IndexShard API {pull}13707[#13707]



[[bug-5.0.0]]
[float]
=== Bug fixes

Aggregations::
* Fixed writeable name from range to geo_distance {pull}20860[#20860]
* Fix date_range aggregation to not cache if now is used {pull}20740[#20740]
* The `top_hits` aggregation should compile scripts only once. {pull}20738[#20738]
* Fix agg profiling when using breadth_first collect mode {pull}20156[#20156]
* Throw exception when maxBounds greater than minBounds {pull}19855[#19855] (issue: {issue}19833[#19833])
* Undeprecates `aggs` in the search request {pull}19674[#19674] (issue: {issue}19504[#19504])
* Change how `nested` and `reverse_nested` aggs know about their nested depth level {pull}19550[#19550] (issues: {issue}11749[#11749], {issue}12410[#12410])
* Make ExtendedBounds immutable {pull}19490[#19490] (issue: {issue}19481[#19481])
* Aggregations fix: support include/exclude strings for IP and dates {pull}18408[#18408] (issue: {issue}17705[#17705])
* Fix xcontent rendering of ip terms aggs. {pull}18003[#18003] (issue: {issue}17971[#17971])
* Improving parsing of sigma param for Extended Stats Bucket Aggregation {pull}17562[#17562] (issue: {issue}17499[#17499])
* Fixes NPE when no window is specified in moving average request {pull}17556[#17556] (issue: {issue}17516[#17516])
* Fixes Filter and FiltersAggregation to work with empty query {pull}17542[#17542] (issue: {issue}17518[#17518])
* Fixes the defaults for `keyed` in the percentiles aggregations {pull}17217[#17217]
* Correct typo in class name of StatsAggregator {pull}15264[#15264] (issue: {issue}14730[#14730])

Allocation::
* Keep a shadow replicas' allocation id when it is promoted to primary {pull}20863[#20863] (issue: {issue}20650[#20650])
* IndicesClusterStateService should clean local started when re-assigns an initializing shard with the same aid {pull}20687[#20687]
* IndexRoutingTable.initializeEmpty shouldn't override supplied primary RecoverySource {pull}20638[#20638] (issue: {issue}20637[#20637])
* Update incoming recoveries stats when shadow replica is reinitialized {pull}20612[#20612]
* `index.routing.allocation.initial_recovery` limits replica allocation {pull}20589[#20589]
* Upon being elected as master, prefer joins' node info to existing cluster state {pull}19743[#19743]
* Fix NPE when initializing replica shard has no UnassignedInfo {pull}19491[#19491] (issue: {issue}19488[#19488])
* Make shard store fetch less dependent on the current cluster state, both on master and non data nodes {pull}19044[#19044] (issue: {issue}18938[#18938])
* Fix recovery throttling to properly handle relocating non-primary shards {pull}18701[#18701] (issue: {issue}18640[#18640])
* Replica shards must be failed before primary shards {pull}15686[#15686]

Analysis::
* Named analyzer should close the analyzer that it wraps {pull}20197[#20197]
* Can load non-PreBuiltTokenFilter in Analyze API {pull}20396[#20396]
* Fix analyzer alias processing {pull}19506[#19506] (issue: {issue}19163[#19163])

Bulk::
* Add not-null precondition check in BulkRequest {pull}18347[#18347] (issue: {issue}12038[#12038])

CAT API::
* Fixes cat tasks operation in detailed mode {pull}19759[#19759] (issue: {issue}19755[#19755])
* Add index pattern wildcards support to _cat/shards {pull}19655[#19655] (issue: {issue}19634[#19634])

CRUD::
* GET operations should not extract fields from `_source`. {pull}20158[#20158] (issues: {issue}15017[#15017], {issue}20102[#20102])
* Squash a race condition in RefreshListeners {pull}18806[#18806]
* Prevent TransportReplicationAction to route request based on stale local routing table {pull}16274[#16274] (issues: {issue}12573[#12573], {issue}12574[#12574])
* Resolves the conflict between alias routing and parent routing by applying the alias routing and ignoring the parent routing. {pull}15371[#15371] (issue: {issue}3068[#3068])

Cache::
* Prevent requests that use scripts or now() from being cached {pull}20750[#20750] (issue: {issue}20645[#20645])
* Serialize index boost and phrase suggest collation keys in a consistent order {pull}20081[#20081] (issue: {issue}19986[#19986])

Circuit Breakers::
* Never trip circuit breaker in liveness request {pull}18627[#18627] (issue: {issue}17951[#17951])
* Free bytes reserved on request breaker {pull}18204[#18204] (issue: {issue}18144[#18144])

Cluster::
* Fixes issue with dangling index being deleted instead of re-imported {pull}19666[#19666]
* Allow routing table to be filtered by index pattern {pull}19688[#19688]
* Use executor's describeTasks method to log task information in cluster service {pull}19531[#19531]
* Acknowledge index deletion requests based on standard cluster state acknowledgment {pull}18602[#18602] (issues: {issue}16442[#16442], {issue}18558[#18558])
* Dangling indices are not imported if a tombstone for the index exists {pull}18250[#18250] (issue: {issue}18249[#18249])
* Fix issue with tombstones matching active indices in cluster state {pull}18058[#18058] (issue: {issue}18054[#18054])
* Shard state action channel exceptions {pull}16057[#16057] (issue: {issue}15748[#15748])

Core::
* Makes `m` case sensitive in TimeValue {pull}19649[#19649] (issue: {issue}19619[#19619])
* Guard against negative result from FileStore.getUsableSpace when picking data path for a new shard {pull}19554[#19554]
* Handle rejected execution exception on reschedule {pull}19505[#19505]
* Fix concurrency bug in IMC that could cause it to check too infrequently {pull}18357[#18357]
* Iterables.flatten should not pre-cache the first iterator {pull}18355[#18355] (issue: {issue}18353[#18353])
* Avoid race while retiring executors {pull}18333[#18333]
* Refactor UUID-generating methods out of Strings {pull}17837[#17837] (issue: {issue}17819[#17819])
* Node names cleanup {pull}17723[#17723] (issue: {issue}17718[#17718])
* NullPointerException from IndexingMemoryController when a version conflict happens during recovery {pull}17569[#17569]
* Handle RejectedExecution gracefully in TransportService during shutdown {pull}16965[#16965]

Discovery::
* Update discovery nodes after cluster state is published {pull}20409[#20409]
* Add current cluster state version to zen pings and use them in master election {pull}20384[#20384] (issue: {issue}20348[#20348])

Engine::
* Take refresh IOExceptions into account when catching ACE in InternalEngine {pull}20546[#20546] (issue: {issue}19975[#19975])
* Don't suppress AlreadyClosedException {pull}19975[#19975] (issue: {issue}19861[#19861])

Expressions::
* replace ScriptException with a better one {pull}18600[#18600]

Geo::
* Incomplete results when using geo_distance for large distances [ISSUE] {pull}17578[#17578]
* Fix multi-field support for GeoPoint types {pull}15702[#15702] (issue: {issue}15701[#15701])
* Enforce distance in distance query is > 0 [ISSUE] {pull}15135[#15135]

Highlighting::
* Enable BoostingQuery with FVH highlighter {pull}19984[#19984] (issue: {issue}19985[#19985])

Index APIs::
* Fixes active shard count check in the case of `all` shards {pull}19760[#19760]
* Add zero-padding to auto-generated rollover index name increment {pull}19610[#19610] (issue: {issue}19484[#19484])

Ingest::
* no null values in ingest configuration error messages {pull}20616[#20616]
* JSON Processor was not properly added {pull}20613[#20613]
* Don't rebuild pipeline on every cluster state update {pull}20189[#20189]
* Add dotexpander processor {pull}20078[#20078]
* Fix NPE when simulating a pipeline with no id {pull}19650[#19650]
* Change foreach processor to use ingest metadata for array element {pull}19609[#19609] (issue: {issue}19592[#19592])
* No other processors should be executed after on_failure is called {pull}19545[#19545]
* rethrow script compilation exceptions into ingest configuration exceptions {pull}19318[#19318]
* Rename from `ingest-useragent` plugin to `ingest-user-agent` and its processor from `useragent` to `user_agent` {pull}19261[#19261]
* Fix ignore_failure behavior in _simulate?verbose and more cleanup {pull}18987[#18987]
* Pipeline Stats: Fix concurrent modification exception {pull}18177[#18177] (issue: {issue}18126[#18126])
* Validate properties values according to database type {pull}17940[#17940] (issue: {issue}17683[#17683])
* Ingest does not close its factories {pull}17626[#17626] (issue: {issue}17625[#17625])
* Handle regex parsing errors in Gsub and Grok Processors {pull}17260[#17260]
* add on_failure exception metadata to ingest document for verbose simulate {pull}16562[#16562]
* The IngestDocument copy constructor should make a deep copy {pull}16248[#16248] (issue: {issue}16246[#16246])

Inner Hits::
* Ensure that that InnerHitBuilder uses rewritten queries {pull}19360[#19360] (issue: {issue}19353[#19353])

Internal::
* Prevent AbstractArrays from release bytes more than once {pull}20819[#20819]
* IndicesAliasesRequest should not implement CompositeIndicesRequest {pull}20726[#20726]
* Ensure elasticsearch doesn't start with unuspported indices {pull}20514[#20514] (issue: {issue}20512[#20512])
* Remove ListTasksResponse#setDiscoveryNodes() {pull}19773[#19773] (issue: {issue}19772[#19772])
* Priority values should be unmodifiable {pull}19447[#19447]
* Extract AbstractBytesReferenceTestCase {pull}19141[#19141]
* Add XPointValues {pull}18011[#18011] (issue: {issue}18010[#18010])
* Fix BulkItemResponse.Failure.toString {pull}17871[#17871]
* Enable unmap hack for java 9 {pull}16986[#16986] (issue: {issue}1[#1])
* Fix issues with failed cache loads {pull}14315[#14315]
* Allow parser to move on the START_OBJECT token when parsing search source {pull}14145[#14145]
* Ensure searcher is release if wrapping fails {pull}14107[#14107]
* Avoid deadlocks in Cache#computeIfAbsent {pull}14091[#14091] (issue: {issue}14090[#14090])

Java API::
* fix IndexResponse#toString to print out shards info {pull}20562[#20562]
* Add NamedWriteables from plugins to TransportClient {pull}19825[#19825] (issue: {issue}19764[#19764])
* Fix potential NPE in SearchSourceBuilder {pull}16905[#16905] (issue: {issue}16902[#16902])

Java REST Client::
* Rest Client: add slash to log line when missing between host and uri {pull}19325[#19325] (issue: {issue}19314[#19314])
* Rest Client: HostsSniffer to set http as default scheme {pull}19306[#19306]

Logging::
* Fix logger when you can not create an azure storage client {pull}20670[#20670] (issues: {issue}20633[#20633], {issue}20669[#20669])
* Avoid unnecessary creation of prefix loggers {pull}20571[#20571] (issue: {issue}20570[#20570])
* Fix logging hierarchy configs {pull}20463[#20463]
* Fix prefix logging {pull}20429[#20429]
* Hack around Log4j bug rendering exceptions {pull}20306[#20306] (issue: {issue}20304[#20304])
* Avoid prematurely triggering logger initialization {pull}20170[#20170]
* Only log running out of slots when out of slots {pull}19637[#19637]

Mapping::
* Allow position_gap_increment for fields in indices created prior to 5.0 {pull}20806[#20806] (issues: {issue}19510[#19510], {issue}20413[#20413])
* Validate blank field name {pull}19860[#19860] (issue: {issue}19251[#19251])
* Better error message when mapping configures null {pull}18809[#18809] (issue: {issue}18803[#18803])
* Make doc_values accessible for _type {pull}18220[#18220]
* Fix and test handling of `null_value`. {pull}18090[#18090] (issue: {issue}18085[#18085])
* Fail automatic string upgrade if the value of `index` is not recognized. {pull}18082[#18082] (issue: {issue}18062[#18062])
* Fix dynamic check to properly handle parents {pull}17864[#17864] (issues: {issue}17644[#17644], {issue}17854[#17854])
* Fix array parsing to remove its context when finished parsing {pull}17768[#17768]
* Disallow fielddata loading on text fields that are not indexed. {pull}17747[#17747]
* Make dynamic template parsing less lenient. {pull}17249[#17249]
* Fix dynamic mapper when its parent already has an update {pull}17065[#17065]
* Fix copy_to when the target is a dynamic object field. {pull}15216[#15216] (issues: {issue}111237[#111237], {issue}11237[#11237])
* Preserve existing mappings on batch mapping updates {pull}15130[#15130] (issues: {issue}14899[#14899], {issue}15129[#15129])

Network::
* Fix connection close header handling {pull}20956[#20956] (issue: {issue}20938[#20938])
* Ensure port range is readable in the exception message {pull}20893[#20893]
* Fix expect 100 continue header handling {pull}19904[#19904] (issue: {issue}19834[#19834])
* Fixes netty4 module's CORS config to use defaults  {pull}19874[#19874]
* Fix various concurrency issues in transport {pull}19675[#19675]
* Verify lower level transport exceptions don't bubble up on disconnects {pull}19518[#19518] (issue: {issue}19096[#19096])

Packaging::
* [Packaging] Do not remove scripts directory on upgrade {pull}20452[#20452]
* [Package] Remove bin/lib/modules directories on RPM uninstall/upgrade {pull}20448[#20448]
* Fix handling of spaces for jvm.options on Windows {pull}19951[#19951] (issue: {issue}19941[#19941])
* Disable service in pre-uninstall {pull}19328[#19328]
* Remove extra bin/ directory in bin folder {pull}18630[#18630]
* Filter client/server VM options from jvm.options {pull}18473[#18473]
* Preserve config files from RPM install {pull}18188[#18188] (issue: {issue}18158[#18158])
* Fix typo in message for variable setup ES_MAX_MEM {pull}18168[#18168]
* Don't run `mkdir` when $DATA_DIR contains a comma-separated list {pull}17419[#17419] (issue: {issue}16992[#16992])
* Fix exit code {pull}17082[#17082]
* Set MAX_OPEN_FILES to 65536 {pull}17431[#17431] (issue: {issue}17430[#17430])
* [windows] Service command still had positional start command {pull}17391[#17391]
* Do not pass double-dash arguments on startup {pull}17087[#17087] (issue: {issue}17084[#17084])

Parent/Child::
*  Make sure that no `_parent#null` gets introduces as default _parent mapping {pull}19470[#19470] (issue: {issue}19389[#19389])

Percolator::
* Fail indexing percolator queries containing either a has_child or has_parent query {pull}20229[#20229] (issue: {issue}2960[#2960])
* Add support for MatchNoDocsQuery in percolator's query terms extract service {pull}18492[#18492]
* Let PercolatorQuery's explain use the two phase iterator {pull}17315[#17315] (issue: {issue}17314[#17314])

Plugin Discovery Azure Classic::
* Make discovery-azure plugin work again {pull}19062[#19062] (issues: {issue}15630[#15630], {issue}18637[#18637])

Plugin Discovery EC2::
* Fix EC2 discovery settings {pull}18690[#18690] (issues: {issue}18652[#18652], {issue}18662[#18662])
* Add TAG_SETTING to list of allowed tags for the ec2 discovery plugin. {pull}18257[#18257]
* Fix EC2 Discovery settings {pull}17651[#17651] (issue: {issue}16602[#16602])

Plugin Discovery GCE::
* Fix NPE when GCE region is empty {pull}19176[#19176] (issue: {issue}16967[#16967])

Plugin Ingest Attachment::
* Adds content-length as number {pull}19927[#19927] (issue: {issue}19924[#19924])

Plugin Ingest GeoIp::
* [ingest-geoip] update geoip to not include null-valued results from  {pull}20455[#20455]

Plugin Lang Painless::
* Fix String Concatenation Bug In Painless {pull}20623[#20623]
* Fix break bug in for/foreach loops. {pull}20146[#20146]
* Fix compound assignment with string concats {pull}18933[#18933] (issue: {issue}18929[#18929])
* Fix horrible capture {pull}18907[#18907] (issue: {issue}18899[#18899])
* Fix Casting Bug {pull}18871[#18871]
* Remove Grammar Ambiguities {pull}18531[#18531]
* Remove if/else ANTLR ambiguity. {pull}18428[#18428]
* Fix insanely slow compilation {pull}18410[#18410] (issue: {issue}18398[#18398])
* Fix Bug in Painless Assignment {pull}18379[#18379]
* Fix bracket shortcuts {pull}18263[#18263]

Plugin Repository Azure::
* Register group setting for repository-azure accounts {pull}19086[#19086]
* Fix azure files removal {pull}18451[#18451] (issues: {issue}16472[#16472], {issue}18436[#18436])

Plugin Repository S3::
* Fixes leading forward slash in S3 repository base_path {pull}20861[#20861]
* Add missing permission to repository-s3 {pull}19128[#19128] (issues: {issue}18539[#18539], {issue}19121[#19121])
* Fix repository S3 Settings and add more tests {pull}18703[#18703] (issues: {issue}18662[#18662], {issue}18690[#18690])

Plugin Store SMB::
* Fix calling ensureOpen() on the wrong directory (master forwardport) {pull}16395[#16395] (issue: {issue}16383[#16383])

Plugins::
* Use sysprop like with es.path.home to pass conf dir {pull}18870[#18870] (issue: {issue}18689[#18689])
* Quote path to java binary {pull}17496[#17496] (issue: {issue}17495[#17495])
* CliTool: Messages printed in Terminal should have percent char escaped {pull}16367[#16367]

Query DSL::
* Fixes MultiMatchQuery so that it doesn't provide a null context {pull}20882[#20882]
* Fix silently accepting malformed queries {pull}20515[#20515] (issue: {issue}20500[#20500])
* query_string_query should take term length into consideration when fuzziness is auto {pull}20299[#20299] (issue: {issue}15972[#15972])
* Throw ParsingException if a query is wrapped in an array {pull}19750[#19750] (issue: {issue}12887[#12887])
* Restore parameter name auto_generate_phrase_queries {pull}19514[#19514] (issue: {issue}19512[#19512])
* Resolve string dates and date math to millis before evaluating for rewrite in range query {pull}17239[#17239]
* `constant_score` query should throw error on more than one filter {pull}17135[#17135] (issue: {issue}17126[#17126])
* Single IPv4 addresses in IP field term queries {pull}16068[#16068] (issue: {issue}16058[#16058])
* Make strategy optional in GeoShapeQueryBuilder readFrom and writeTo {pull}13963[#13963]

Query Refactoring::
* Query refactoring: set has_parent & has_child types context properly {pull}13863[#13863]
* Make sure equivalent geohashCellQueries are equal after toQuery called {pull}13792[#13792]

REST::
* Remove lenient URL parameter parsing {pull}20722[#20722] (issue: {issue}14719[#14719])
* Fixes CORS handling so that it uses the defaults {pull}19522[#19522] (issue: {issue}19520[#19520])
* Get XContent params from request in Nodes rest actions {pull}18860[#18860] (issue: {issue}18794[#18794])
* Fixes reading of CORS pre-flight headers and methods {pull}17523[#17523] (issue: {issue}17483[#17483])

Recovery::
* Fix concurrency issues between cancelling a relocation and marking shard as relocated {pull}20443[#20443]
* Move `reset recovery` into RecoveriesCollection {pull}19466[#19466] (issue: {issue}19473[#19473])
* Fix replica-primary inconsistencies when indexing during primary relocation with ongoing replica recoveries {pull}19287[#19287] (issue: {issue}19248[#19248])
* Invoke `IndexingOperationListeners` also when recovering from store or remote {pull}17406[#17406]
* Prevent interruption while store checks lucene files for consistency {pull}16308[#16308]
* Mark shard as recovering on the cluster state thread {pull}14276[#14276] (issues: {issue}13766[#13766], {issue}14115[#14115])

Reindex API::
* Fix reindex with transport client {pull}19997[#19997] (issues: {issue}19773[#19773], {issue}19979[#19979])
* Fix a race condition in reindex's rethrottle {pull}18731[#18731] (issue: {issue}18744[#18744])
* Reindex should never report negative throttled_until {pull}17799[#17799] (issue: {issue}17783[#17783])
* Reindex should gracefully handle when _source is disabled {pull}17667[#17667] (issue: {issue}17666[#17666])

Scripting::
* Add support for booleans in scripts {pull}20950[#20950] (issue: {issue}20949[#20949])
* Fix Javascript OOM build Failure {pull}20307[#20307]
* Fix propagating the default value for script settings {pull}20183[#20183] (issue: {issue}20159[#20159])
* Catch and wrap AssertionError and NoClassDefFoundError in groovy scripts {pull}19958[#19958] (issues: {issue}19806[#19806], {issue}19923[#19923])

Search::
* Do not cache script queries. {pull}20799[#20799] (issue: {issue}20763[#20763])
* Throw error when trying to fetch fields from source and source is disabled {pull}20424[#20424] (issues: {issue}20093[#20093], {issue}20408[#20408])
* Source filtering should keep working when the source contains numbers greater than `Long.MAX_VALUE`. {pull}20278[#20278] (issue: {issue}11508[#11508])
* Fix NPE when running a range query on a `scaled_float` with no upper bound. {pull}20253[#20253]
* Fix NPE during search with source filtering if the source is disabled. {pull}20093[#20093] (issue: {issue}7758[#7758])
* Restore assignment of time value when deserializing a scroll instance {pull}19977[#19977] (issue: {issue}18820[#18820])
* Fix explain output for dfs query {pull}19972[#19972] (issue: {issue}15369[#15369])
* Don't recursively count children profile timings {pull}19397[#19397] (issue: {issue}18693[#18693])
* fix explain in function_score if no function filter matches {pull}19185[#19185]
* Fix NPEs due to disabled source {pull}18957[#18957]
* Require timeout units when parsing query body {pull}19077[#19077] (issue: {issue}19075[#19075])
* Close SearchContext if query rewrite failed {pull}18727[#18727]
* Fix parsing single `rescore` element in SearchSourceBuilder {pull}18440[#18440] (issue: {issue}18439[#18439])
* Fail queries on not indexed fields. {pull}18014[#18014]
* Fix for search after {pull}16271[#16271]
* Do not be lenient when parsing CIDRs {pull}14874[#14874] (issue: {issue}14862[#14862])

Settings::
* Fix Setting.timeValue() method {pull}20696[#20696] (issue: {issue}20662[#20662])
* Add a hard limit for `index.number_of_shard` {pull}20682[#20682]
* Include complex settings in settings requests {pull}20622[#20622]
* Fix filter cache setting to allow percentages {pull}20335[#20335] (issue: {issue}20330[#20330])
* Move cluster.routing.allocation.same_shard.host setting to new settings infrastructure {pull}20046[#20046] (issue: {issue}20045[#20045])
* Validate settings against dynamic updaters on the master {pull}19088[#19088] (issue: {issue}19046[#19046])
* Register "cloud.node.auto_attributes" setting in EC2 discovery plugin {pull}18678[#18678]
* Use object equality to compare versions in IndexSettings {pull}18103[#18103]
* fix exists method for list settings when using numbered setting format {pull}17949[#17949]
* convert settings for ResourceWatcherService to new infrastructure {pull}17948[#17948]
* Register bootstrap settings {pull}16513[#16513]
* Add settings filtering to node info requests {pull}16445[#16445]
* Ban write access to system properties {pull}14914[#14914]

Snapshot/Restore::
* Better handling of an empty shard's segments_N file {pull}18784[#18784] (issue: {issue}18707[#18707])
* Fix race condition in snapshot initialization {pull}18426[#18426] (issue: {issue}18121[#18121])
* Fix the semantics for the BlobContainer interface {pull}17878[#17878] (issues: {issue}15579[#15579], {issue}15580[#15580])

Stats::
* Fix FieldStats deserialization of `ip` field {pull}20522[#20522] (issue: {issue}20516[#20516])
* Fix serialization bug in allocation explain API. {pull}19494[#19494]
* Allocation explain: Also serialize `includeDiskInfo` field {pull}19492[#19492]
* Add missing builder.endObject() in FsInfo {pull}18443[#18443] (issues: {issue}15915[#15915], {issue}18433[#18433])

Store::
* Tighten up concurrent store metadata listing and engine writes {pull}19684[#19684] (issue: {issue}19416[#19416])
* Make static Store access shard lock aware {pull}19416[#19416] (issue: {issue}18938[#18938])
* Catch assertion errors on commit and turn it into a real exception {pull}19357[#19357] (issue: {issue}19356[#19356])

Task Manager::
* Shard level tasks in Bulk Action lose reference to their parent tasks {pull}17743[#17743]
* Take filterNodeIds into consideration while sending task requests to nodes {pull}17081[#17081]

Term Vectors::
* Fix calculation of took time of term vectors request {pull}17817[#17817] (issue: {issue}12565[#12565])

Translog::
* Fix RAM usage estimation of LiveVersionMap. {pull}20123[#20123] (issue: {issue}19787[#19787])
* Fix translog replay multiple operations same doc {pull}18611[#18611] (issues: {issue}18547[#18547], {issue}18623[#18623])
* Snapshotting and sync could cause a dead lock TranslogWriter {pull}18481[#18481] (issues: {issue}1[#1], {issue}18360[#18360], {issue}2[#2])
* Move translog recover outside of the engine {pull}17422[#17422]
* Mark shard active during recovery; push settings after engine finally inits {pull}16250[#16250] (issues: {issue}14121[#14121], {issue}16209[#16209])



[[regression-5.0.0]]
[float]
=== Regressions

Highlighting::
* Handle SynonymQuery extraction for the FastVectorHighlighter {pull}20829[#20829] (issue: {issue}20781[#20781])


[[upgrade-5.0.0]]
[float]
=== Upgrades

Core::
* Upgrade to Lucene 6.2.0 {pull}20147[#20147] (issue: {issue}20092[#20092])
* Update to jackson 2.8.1 {pull}18939[#18939] (issue: {issue}18076[#18076])
* Upgrade to Lucene 6.1.0. {pull}18926[#18926]
* Upgrade to lucene-6.1.0-snapshot-3a57bea. {pull}18786[#18786]
* Upgrade to Lucene 6.0.1. {pull}18648[#18648] (issues: {issue}17535[#17535], {issue}28[#28])
* Upgrade to lucene 6 release {pull}17657[#17657]
* Upgrade to lucene-6.0.0-f0aa4fc. {pull}17075[#17075]
* upgrade to lucene 6.0.0-snapshot-bea235f {pull}16964[#16964]
* Upgrade to Jackson 2.7.1 {pull}16801[#16801] (issue: {issue}16294[#16294])

Ingest::
* Update MaxMind geoip2 version to 2.6 {pull}16837[#16837] (issue: {issue}16801[#16801])

Internal::
* Bump master (3.0-snapshot) to java 8 {pull}13314[#13314]

Network::
* Upgrade to Netty 4.1.5 {pull}20222[#20222] (issue: {issue}19786[#19786])
* Dependencies: Upgrade to netty 4.1.4 {pull}19689[#19689]
* Introduce Netty 4 {pull}19526[#19526] (issue: {issue}3226[#3226])

Packaging::
* Upgrade JNA to 4.2.2 and remove optionality {pull}19045[#19045] (issue: {issue}13245[#13245])

Plugin Discovery EC2::
* Update aws sdk to 1.10.69 and add use_throttle_retries repository setting {pull}17784[#17784] (issues: {issue}538[#538], {issue}586[#586], {issue}589[#589])

Scripting::
* Dependencies: Updates to mustache 0.9.3 {pull}20337[#20337]

Search Templates::
* Update mustache.java to version 0.9.1 {pull}14053[#14053] (issue: {issue}13224[#13224])


