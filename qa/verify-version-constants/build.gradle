/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.test.RestIntegTestTask

apply plugin: 'elasticsearch.standalone-test'

// This is a top level task which we will add dependencies to below.
// It is a single task that can be used to backcompat tests against all versions.
task bwcTest {
    description = 'Runs backwards compatibility tests.'
    group = 'verification'
}

for (Version version : indexCompatVersions) {

    // we do not have infrastructure for starting pre-5.0.0 nodes so we skip them
    if (version.before("5.0.0")) continue

    String baseName = "v${version}"
    Task oldClusterTest = tasks.create(name: "${baseName}#oldClusterTest", type: RestIntegTestTask) {
        mustRunAfter(precommit)
    }
    configure(extensions.findByName("${baseName}#oldClusterTestCluster")) {
        distribution = 'zip'
        bwcVersion = version
        numBwcNodes = 1
        numNodes = 1
        clusterName = 'verify-version-constants'
        if (version.onOrAfter('5.3.0')) {
            setting 'http.content_type.required', 'true'
        }
    }

    Task versionBwcTest = tasks.create(name: "${baseName}#bwcTest") {
        dependsOn = [oldClusterTest]
    }

    bwcTest.dependsOn(versionBwcTest)
}

test.enabled = false

task integTest {
    dependsOn = ["v${indexCompatVersions[-1]}#bwcTest"]
}

check.dependsOn(integTest)
